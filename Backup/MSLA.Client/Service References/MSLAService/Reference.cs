//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace MSLA.Client.MSLAService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SimpleUserInfo", Namespace="http://schemas.datacontract.org/2004/07/MSLA.Server.Security")]
    public partial class SimpleUserInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string MainDBNameField;
        
        private System.Guid Session_IDField;
        
        private string UserNameField;
        
        private long User_IDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MainDBName {
            get {
                return this.MainDBNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MainDBNameField, value) != true)) {
                    this.MainDBNameField = value;
                    this.RaisePropertyChanged("MainDBName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Session_ID {
            get {
                return this.Session_IDField;
            }
            set {
                if ((this.Session_IDField.Equals(value) != true)) {
                    this.Session_IDField = value;
                    this.RaisePropertyChanged("Session_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long User_ID {
            get {
                return this.User_IDField;
            }
            set {
                if ((this.User_IDField.Equals(value) != true)) {
                    this.User_IDField = value;
                    this.RaisePropertyChanged("User_ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnDataCommandType", Namespace="http://schemas.datacontract.org/2004/07/MSLA.Server.Data")]
    public enum EnDataCommandType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Text = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StoredProcedure = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TableDirect = 512,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataParameter", Namespace="http://schemas.datacontract.org/2004/07/MSLA.Server.Data")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MSLA.Client.MSLAService.SimpleUserInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MSLA.Client.MSLAService.EnDataCommandType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<MSLA.Client.MSLAService.DataParameter>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MSLA.Client.MSLAService.DataParameter.EnDataParameterType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MSLA.Client.MSLAService.DataParameter.EnParameterDirection))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MSLA.Client.MSLAService.DBConnectionType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MSLA.Client.MSLAService.SimpleTable))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<System.Collections.Generic.Dictionary<string, object>>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, bool>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, MSLA.Client.MSLAService.SimpleTable>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<object>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<long, string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.DBNull))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Exception))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MSLA.Client.MSLAService.MasterCriteriaBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MSLA.Client.MSLAService.SimpleBOMaster))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<MSLA.Client.MSLAService.BrokenRule>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MSLA.Client.MSLAService.BrokenRule))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.Generic.List<MSLA.Client.MSLAService.FeedItem>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MSLA.Client.MSLAService.FeedItem))]
    public partial class DataParameter : object, System.ComponentModel.INotifyPropertyChanged {
        
        private MSLA.Client.MSLAService.DataParameter.EnDataParameterType _DBTypeField;
        
        private MSLA.Client.MSLAService.DataParameter.EnParameterDirection _DirectionField;
        
        private string _ParameterNameField;
        
        private byte _PrecisionField;
        
        private byte _ScaleField;
        
        private int _SizeField;
        
        private object _ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public MSLA.Client.MSLAService.DataParameter.EnDataParameterType _DBType {
            get {
                return this._DBTypeField;
            }
            set {
                if ((this._DBTypeField.Equals(value) != true)) {
                    this._DBTypeField = value;
                    this.RaisePropertyChanged("_DBType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public MSLA.Client.MSLAService.DataParameter.EnParameterDirection _Direction {
            get {
                return this._DirectionField;
            }
            set {
                if ((this._DirectionField.Equals(value) != true)) {
                    this._DirectionField = value;
                    this.RaisePropertyChanged("_Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _ParameterName {
            get {
                return this._ParameterNameField;
            }
            set {
                if ((object.ReferenceEquals(this._ParameterNameField, value) != true)) {
                    this._ParameterNameField = value;
                    this.RaisePropertyChanged("_ParameterName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public byte _Precision {
            get {
                return this._PrecisionField;
            }
            set {
                if ((this._PrecisionField.Equals(value) != true)) {
                    this._PrecisionField = value;
                    this.RaisePropertyChanged("_Precision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public byte _Scale {
            get {
                return this._ScaleField;
            }
            set {
                if ((this._ScaleField.Equals(value) != true)) {
                    this._ScaleField = value;
                    this.RaisePropertyChanged("_Scale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _Size {
            get {
                return this._SizeField;
            }
            set {
                if ((this._SizeField.Equals(value) != true)) {
                    this._SizeField = value;
                    this.RaisePropertyChanged("_Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public object _Value {
            get {
                return this._ValueField;
            }
            set {
                if ((object.ReferenceEquals(this._ValueField, value) != true)) {
                    this._ValueField = value;
                    this.RaisePropertyChanged("_Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="DataParameter.EnDataParameterType", Namespace="http://schemas.datacontract.org/2004/07/MSLA.Server.Data")]
        public enum EnDataParameterType : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            BigInt = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Binary = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Bit = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Char = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            DateTime = 4,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Decimal = 5,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Float = 6,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Image = 7,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Int = 8,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Money = 9,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            NChar = 10,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            NText = 11,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            NVarChar = 12,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Real = 13,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            UniqueIdentifier = 14,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            SmallDateTime = 15,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            SmallInt = 16,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            SmallMoney = 17,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Text = 18,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Timestamp = 19,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            TinyInt = 20,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            VarBinary = 21,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            VarChar = 22,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Variant = 23,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Xml = 25,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Udt = 29,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Structured = 30,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Date = 31,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Time = 32,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            DateTime2 = 33,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            DateTimeOffset = 34,
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="DataParameter.EnParameterDirection", Namespace="http://schemas.datacontract.org/2004/07/MSLA.Server.Data")]
        public enum EnParameterDirection : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Input = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Output = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            InputOutput = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            ReturnValue = 6,
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DBConnectionType", Namespace="http://schemas.datacontract.org/2004/07/MSLA.Server.Data")]
    public enum DBConnectionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MainDB = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CompanyDB = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CompanyDMSDB = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OLTPDB = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SimpleTable", Namespace="http://schemas.datacontract.org/2004/07/MSLA.Server.Data")]
    public partial class SimpleTable : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.Generic.Dictionary<string, string> ColumnsField;
        
        private System.Collections.Generic.List<System.Collections.Generic.Dictionary<string, object>> RowsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> Columns {
            get {
                return this.ColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnsField, value) != true)) {
                    this.ColumnsField = value;
                    this.RaisePropertyChanged("Columns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<System.Collections.Generic.Dictionary<string, object>> Rows {
            get {
                return this.RowsField;
            }
            set {
                if ((object.ReferenceEquals(this.RowsField, value) != true)) {
                    this.RowsField = value;
                    this.RaisePropertyChanged("Rows");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MasterCriteriaBase", Namespace="http://schemas.datacontract.org/2004/07/MSLA.Server_WebService")]
    public partial class MasterCriteriaBase : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DocMasterTypeField;
        
        private long DocMaster_IDField;
        
        private System.Collections.Generic.Dictionary<string, object> PropertyCollectionField;
        
        private MSLA.Client.MSLAService.SimpleUserInfo UserInfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocMasterType {
            get {
                return this.DocMasterTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocMasterTypeField, value) != true)) {
                    this.DocMasterTypeField = value;
                    this.RaisePropertyChanged("DocMasterType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DocMaster_ID {
            get {
                return this.DocMaster_IDField;
            }
            set {
                if ((this.DocMaster_IDField.Equals(value) != true)) {
                    this.DocMaster_IDField = value;
                    this.RaisePropertyChanged("DocMaster_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, object> PropertyCollection {
            get {
                return this.PropertyCollectionField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyCollectionField, value) != true)) {
                    this.PropertyCollectionField = value;
                    this.RaisePropertyChanged("PropertyCollection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MSLA.Client.MSLAService.SimpleUserInfo UserInfo {
            get {
                return this.UserInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.UserInfoField, value) != true)) {
                    this.UserInfoField = value;
                    this.RaisePropertyChanged("UserInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SimpleBOMaster", Namespace="http://schemas.datacontract.org/2004/07/MSLA.Server.Base")]
    public partial class SimpleBOMaster : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.Generic.List<MSLA.Client.MSLAService.BrokenRule> BrokenDeleteRulesField;
        
        private System.Collections.Generic.List<MSLA.Client.MSLAService.BrokenRule> BrokenSaveRulesField;
        
        private string ErrorMsgField;
        
        private string MasterTypeField;
        
        private System.Collections.Generic.Dictionary<string, object> PropertyBagField;
        
        private System.Collections.Generic.Dictionary<string, bool> PropertyIsReadOnlyField;
        
        private MSLA.Client.MSLAService.SimpleUserInfo UserInfoField;
        
        private long fldMasterItem_IDField;
        
        private System.Guid fldSerializedMaster_IDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<MSLA.Client.MSLAService.BrokenRule> BrokenDeleteRules {
            get {
                return this.BrokenDeleteRulesField;
            }
            set {
                if ((object.ReferenceEquals(this.BrokenDeleteRulesField, value) != true)) {
                    this.BrokenDeleteRulesField = value;
                    this.RaisePropertyChanged("BrokenDeleteRules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<MSLA.Client.MSLAService.BrokenRule> BrokenSaveRules {
            get {
                return this.BrokenSaveRulesField;
            }
            set {
                if ((object.ReferenceEquals(this.BrokenSaveRulesField, value) != true)) {
                    this.BrokenSaveRulesField = value;
                    this.RaisePropertyChanged("BrokenSaveRules");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MasterType {
            get {
                return this.MasterTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MasterTypeField, value) != true)) {
                    this.MasterTypeField = value;
                    this.RaisePropertyChanged("MasterType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, object> PropertyBag {
            get {
                return this.PropertyBagField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyBagField, value) != true)) {
                    this.PropertyBagField = value;
                    this.RaisePropertyChanged("PropertyBag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, bool> PropertyIsReadOnly {
            get {
                return this.PropertyIsReadOnlyField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyIsReadOnlyField, value) != true)) {
                    this.PropertyIsReadOnlyField = value;
                    this.RaisePropertyChanged("PropertyIsReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MSLA.Client.MSLAService.SimpleUserInfo UserInfo {
            get {
                return this.UserInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.UserInfoField, value) != true)) {
                    this.UserInfoField = value;
                    this.RaisePropertyChanged("UserInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long fldMasterItem_ID {
            get {
                return this.fldMasterItem_IDField;
            }
            set {
                if ((this.fldMasterItem_IDField.Equals(value) != true)) {
                    this.fldMasterItem_IDField = value;
                    this.RaisePropertyChanged("fldMasterItem_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid fldSerializedMaster_ID {
            get {
                return this.fldSerializedMaster_IDField;
            }
            set {
                if ((this.fldSerializedMaster_IDField.Equals(value) != true)) {
                    this.fldSerializedMaster_IDField = value;
                    this.RaisePropertyChanged("fldSerializedMaster_ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BrokenRule", Namespace="http://schemas.datacontract.org/2004/07/MSLA.Server.Rules")]
    public partial struct BrokenRule : System.ComponentModel.INotifyPropertyChanged {
        
        private string _ClassNameField;
        
        private string _ClassPropertyField;
        
        private int _ErrorRowNoField;
        
        private string _GridNameField;
        
        private bool _IsWarningField;
        
        private string _RuleDescField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _ClassName {
            get {
                return this._ClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this._ClassNameField, value) != true)) {
                    this._ClassNameField = value;
                    this.RaisePropertyChanged("_ClassName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _ClassProperty {
            get {
                return this._ClassPropertyField;
            }
            set {
                if ((object.ReferenceEquals(this._ClassPropertyField, value) != true)) {
                    this._ClassPropertyField = value;
                    this.RaisePropertyChanged("_ClassProperty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _ErrorRowNo {
            get {
                return this._ErrorRowNoField;
            }
            set {
                if ((this._ErrorRowNoField.Equals(value) != true)) {
                    this._ErrorRowNoField = value;
                    this.RaisePropertyChanged("_ErrorRowNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _GridName {
            get {
                return this._GridNameField;
            }
            set {
                if ((object.ReferenceEquals(this._GridNameField, value) != true)) {
                    this._GridNameField = value;
                    this.RaisePropertyChanged("_GridName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool _IsWarning {
            get {
                return this._IsWarningField;
            }
            set {
                if ((this._IsWarningField.Equals(value) != true)) {
                    this._IsWarningField = value;
                    this.RaisePropertyChanged("_IsWarning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string _RuleDesc {
            get {
                return this._RuleDescField;
            }
            set {
                if ((object.ReferenceEquals(this._RuleDescField, value) != true)) {
                    this._RuleDescField = value;
                    this.RaisePropertyChanged("_RuleDesc");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FeedItem", Namespace="http://schemas.datacontract.org/2004/07/MSLA.Server.Tools")]
    public partial class FeedItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private string LinkField;
        
        private System.DateTime PublishedDateField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Link {
            get {
                return this.LinkField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkField, value) != true)) {
                    this.LinkField = value;
                    this.RaisePropertyChanged("Link");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PublishedDate {
            get {
                return this.PublishedDateField;
            }
            set {
                if ((this.PublishedDateField.Equals(value) != true)) {
                    this.PublishedDateField = value;
                    this.RaisePropertyChanged("PublishedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MSLAService.IMSLAService")]
    public interface IMSLAService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMSLAService/TryLogin", ReplyAction="http://tempuri.org/IMSLAService/TryLoginResponse")]
        System.IAsyncResult BeginTryLogin(string name, System.Guid Request_ID, System.AsyncCallback callback, object asyncState);
        
        MSLA.Client.MSLAService.SimpleUserInfo EndTryLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMSLAService/LogOut", ReplyAction="http://tempuri.org/IMSLAService/LogOutResponse")]
        System.IAsyncResult BeginLogOut(MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, System.AsyncCallback callback, object asyncState);
        
        bool EndLogOut(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMSLAService/TryLoginMain", ReplyAction="http://tempuri.org/IMSLAService/TryLoginMainResponse")]
        System.IAsyncResult BeginTryLoginMain(string name, string pwd, System.Guid Request_ID, System.AsyncCallback callback, object asyncState);
        
        MSLA.Client.MSLAService.SimpleUserInfo EndTryLoginMain(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMSLAService/TryLoginUPA", ReplyAction="http://tempuri.org/IMSLAService/TryLoginUPAResponse")]
        System.IAsyncResult BeginTryLoginUPA(string name, System.Guid Request_ID, System.AsyncCallback callback, object asyncState);
        
        MSLA.Client.MSLAService.SimpleUserInfo EndTryLoginUPA(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMSLAService/FillDt", ReplyAction="http://tempuri.org/IMSLAService/FillDtResponse")]
        System.IAsyncResult BeginFillDt(string CmdText, MSLA.Client.MSLAService.EnDataCommandType cmdType, System.Collections.Generic.List<MSLA.Client.MSLAService.DataParameter> cmdParams, MSLA.Client.MSLAService.DBConnectionType cnType, int cmdTimeout, MSLA.Client.MSLAService.SimpleUserInfo myUser, System.Guid Request_ID, System.AsyncCallback callback, object asyncState);
        
        MSLA.Client.MSLAService.SimpleTable EndFillDt(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMSLAService/ExecuteCMM", ReplyAction="http://tempuri.org/IMSLAService/ExecuteCMMResponse")]
        System.IAsyncResult BeginExecuteCMM(string CmdText, MSLA.Client.MSLAService.EnDataCommandType cmdType, System.Collections.Generic.List<MSLA.Client.MSLAService.DataParameter> cmdParams, MSLA.Client.MSLAService.DBConnectionType cnType, int cmdTimeout, MSLA.Client.MSLAService.SimpleUserInfo myUser, System.Guid Request_ID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<MSLA.Client.MSLAService.DataParameter> EndExecuteCMM(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMSLAService/ExecuteScalar", ReplyAction="http://tempuri.org/IMSLAService/ExecuteScalarResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Client.MSLAService.SimpleUserInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Client.MSLAService.EnDataCommandType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<MSLA.Client.MSLAService.DataParameter>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Client.MSLAService.DataParameter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Client.MSLAService.DataParameter.EnDataParameterType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Client.MSLAService.DataParameter.EnParameterDirection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Client.MSLAService.DBConnectionType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Client.MSLAService.SimpleTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<System.Collections.Generic.Dictionary<string, object>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, bool>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, MSLA.Client.MSLAService.SimpleTable>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<long, string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.DBNull))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Exception))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Client.MSLAService.MasterCriteriaBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Client.MSLAService.SimpleBOMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<MSLA.Client.MSLAService.BrokenRule>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Client.MSLAService.BrokenRule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<MSLA.Client.MSLAService.FeedItem>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Client.MSLAService.FeedItem))]
        System.IAsyncResult BeginExecuteScalar(string CmdText, MSLA.Client.MSLAService.EnDataCommandType cmdType, System.Collections.Generic.List<MSLA.Client.MSLAService.DataParameter> cmdParams, MSLA.Client.MSLAService.DBConnectionType cnType, int cmdTimeout, MSLA.Client.MSLAService.SimpleUserInfo myUser, System.Guid Request_ID, System.AsyncCallback callback, object asyncState);
        
        object EndExecuteScalar(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMSLAService/FetchBOMaster", ReplyAction="http://tempuri.org/IMSLAService/FetchBOMasterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.Exception), Action="http://tempuri.org/IMSLAService/FetchBOMasterExceptionFault", Name="Exception", Namespace="http://schemas.datacontract.org/2004/07/System")]
        System.IAsyncResult BeginFetchBOMaster(MSLA.Client.MSLAService.MasterCriteriaBase myBOCriteria, System.Guid Request_ID, System.AsyncCallback callback, object asyncState);
        
        MSLA.Client.MSLAService.SimpleBOMaster EndFetchBOMaster(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMSLAService/SaveBOMaster", ReplyAction="http://tempuri.org/IMSLAService/SaveBOMasterResponse")]
        System.IAsyncResult BeginSaveBOMaster(MSLA.Client.MSLAService.SimpleBOMaster myBO, System.Guid Request_ID, System.AsyncCallback callback, object asyncState);
        
        MSLA.Client.MSLAService.SimpleBOMaster EndSaveBOMaster(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMSLAService/DeleteBOMaster", ReplyAction="http://tempuri.org/IMSLAService/DeleteBOMasterResponse")]
        System.IAsyncResult BeginDeleteBOMaster(MSLA.Client.MSLAService.SimpleBOMaster myBO, System.Guid Request_ID, System.AsyncCallback callback, object asyncState);
        
        MSLA.Client.MSLAService.SimpleBOMaster EndDeleteBOMaster(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMSLAService/ResolveTablesFromFile", ReplyAction="http://tempuri.org/IMSLAService/ResolveTablesFromFileResponse")]
        System.IAsyncResult BeginResolveTablesFromFile(byte[] FileStreamInfo, string FileExtension, string FilePassword, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid REquest_ID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<string, MSLA.Client.MSLAService.SimpleTable> EndResolveTablesFromFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMSLAService/HandleException", ReplyAction="http://tempuri.org/IMSLAService/HandleExceptionResponse")]
        System.IAsyncResult BeginHandleException(System.Guid Request_ID, System.AsyncCallback callback, object asyncState);
        
        string EndHandleException(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMSLAService/InvokeMethod", ReplyAction="http://tempuri.org/IMSLAService/InvokeMethodResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Client.MSLAService.SimpleUserInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Client.MSLAService.EnDataCommandType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<MSLA.Client.MSLAService.DataParameter>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Client.MSLAService.DataParameter))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Client.MSLAService.DataParameter.EnDataParameterType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Client.MSLAService.DataParameter.EnParameterDirection))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Client.MSLAService.DBConnectionType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Client.MSLAService.SimpleTable))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<System.Collections.Generic.Dictionary<string, object>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, bool>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<string, MSLA.Client.MSLAService.SimpleTable>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<object>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<long, string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.DBNull))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Exception))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Client.MSLAService.MasterCriteriaBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Client.MSLAService.SimpleBOMaster))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<MSLA.Client.MSLAService.BrokenRule>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Client.MSLAService.BrokenRule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<MSLA.Client.MSLAService.FeedItem>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MSLA.Client.MSLAService.FeedItem))]
        System.IAsyncResult BeginInvokeMethod(string assemblyName, string objectNamespace, string className, System.Collections.Generic.List<object> constructorArgs, string methodName, System.Collections.Generic.List<object> methodArgs, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, System.AsyncCallback callback, object asyncState);
        
        MSLA.Client.MSLAService.SimpleTable EndInvokeMethod(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMSLAService/GetSerivceInfo", ReplyAction="http://tempuri.org/IMSLAService/GetSerivceInfoResponse")]
        System.IAsyncResult BeginGetSerivceInfo(MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, System.AsyncCallback callback, object asyncState);
        
        MSLA.Client.MSLAService.SimpleTable EndGetSerivceInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMSLAService/GetSerivceLog", ReplyAction="http://tempuri.org/IMSLAService/GetSerivceLogResponse")]
        System.IAsyncResult BeginGetSerivceLog(MSLA.Client.MSLAService.SimpleUserInfo UserInfo, string ServiceName, System.Guid Request_ID, System.AsyncCallback callback, object asyncState);
        
        string EndGetSerivceLog(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMSLAService/GetSerivceLogFromID", ReplyAction="http://tempuri.org/IMSLAService/GetSerivceLogFromIDResponse")]
        System.IAsyncResult BeginGetSerivceLogFromID(MSLA.Client.MSLAService.SimpleUserInfo UserInfo, long Service_ID, System.Guid Request_ID, System.AsyncCallback callback, object asyncState);
        
        string EndGetSerivceLogFromID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMSLAService/GetResultSet", ReplyAction="http://tempuri.org/IMSLAService/GetResultSetResponse")]
        System.IAsyncResult BeginGetResultSet(string collectionMember, string Filter, MSLA.Client.MSLAService.DBConnectionType cnType, string valueMember, string displayMember, string queryText, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<long, string> EndGetResultSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMSLAService/GetSelectValue", ReplyAction="http://tempuri.org/IMSLAService/GetSelectValueResponse")]
        System.IAsyncResult BeginGetSelectValue(string collectionMember, string Filter, MSLA.Client.MSLAService.DBConnectionType cnType, string valueMember, string displayMember, string queryText, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, System.AsyncCallback callback, object asyncState);
        
        long EndGetSelectValue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMSLAService/GetSelectText", ReplyAction="http://tempuri.org/IMSLAService/GetSelectTextResponse")]
        System.IAsyncResult BeginGetSelectText(string collectionMember, string Filter, MSLA.Client.MSLAService.DBConnectionType cnType, string valueMember, string displayMember, long selectedVal, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, System.AsyncCallback callback, object asyncState);
        
        string EndGetSelectText(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMSLAService/GetCategoryFeed", ReplyAction="http://tempuri.org/IMSLAService/GetCategoryFeedResponse")]
        System.IAsyncResult BeginGetCategoryFeed(long Category_ID, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, System.AsyncCallback callback, object asyncState);
        
        string EndGetCategoryFeed(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMSLAService/GetCategoryFeedItems", ReplyAction="http://tempuri.org/IMSLAService/GetCategoryFeedItemsResponse")]
        System.IAsyncResult BeginGetCategoryFeedItems(long Category_ID, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<MSLA.Client.MSLAService.FeedItem> EndGetCategoryFeedItems(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMSLAService/GetCategoryContract", ReplyAction="http://tempuri.org/IMSLAService/GetCategoryContractResponse")]
        System.IAsyncResult BeginGetCategoryContract(long Category_ID, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, System.AsyncCallback callback, object asyncState);
        
        MSLA.Client.MSLAService.SimpleTable EndGetCategoryContract(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMSLAService/ContractSubscriptionService", ReplyAction="http://tempuri.org/IMSLAService/ContractSubscriptionServiceResponse")]
        System.IAsyncResult BeginContractSubscriptionService(long Category_ID, string message, bool IsHTML, string Subject, byte[] FileStreamInfo, string FileName, MSLA.Client.MSLAService.SimpleTable testValue, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, System.AsyncCallback callback, object asyncState);
        
        bool EndContractSubscriptionService(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMSLAServiceChannel : MSLA.Client.MSLAService.IMSLAService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TryLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TryLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MSLA.Client.MSLAService.SimpleUserInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MSLA.Client.MSLAService.SimpleUserInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LogOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LogOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TryLoginMainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TryLoginMainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MSLA.Client.MSLAService.SimpleUserInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MSLA.Client.MSLAService.SimpleUserInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TryLoginUPACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public TryLoginUPACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MSLA.Client.MSLAService.SimpleUserInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MSLA.Client.MSLAService.SimpleUserInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FillDtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FillDtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MSLA.Client.MSLAService.SimpleTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MSLA.Client.MSLAService.SimpleTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExecuteCMMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExecuteCMMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<MSLA.Client.MSLAService.DataParameter> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<MSLA.Client.MSLAService.DataParameter>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExecuteScalarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExecuteScalarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public object Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FetchBOMasterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FetchBOMasterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MSLA.Client.MSLAService.SimpleBOMaster Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MSLA.Client.MSLAService.SimpleBOMaster)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveBOMasterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveBOMasterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MSLA.Client.MSLAService.SimpleBOMaster Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MSLA.Client.MSLAService.SimpleBOMaster)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteBOMasterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteBOMasterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MSLA.Client.MSLAService.SimpleBOMaster Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MSLA.Client.MSLAService.SimpleBOMaster)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ResolveTablesFromFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ResolveTablesFromFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<string, MSLA.Client.MSLAService.SimpleTable> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, MSLA.Client.MSLAService.SimpleTable>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HandleExceptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HandleExceptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InvokeMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InvokeMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MSLA.Client.MSLAService.SimpleTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MSLA.Client.MSLAService.SimpleTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSerivceInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSerivceInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MSLA.Client.MSLAService.SimpleTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MSLA.Client.MSLAService.SimpleTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSerivceLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSerivceLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSerivceLogFromIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSerivceLogFromIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetResultSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetResultSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<long, string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<long, string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSelectValueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSelectValueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSelectTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSelectTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCategoryFeedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCategoryFeedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCategoryFeedItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCategoryFeedItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<MSLA.Client.MSLAService.FeedItem> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<MSLA.Client.MSLAService.FeedItem>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCategoryContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCategoryContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public MSLA.Client.MSLAService.SimpleTable Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((MSLA.Client.MSLAService.SimpleTable)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContractSubscriptionServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ContractSubscriptionServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MSLAServiceClient : System.ServiceModel.ClientBase<MSLA.Client.MSLAService.IMSLAService>, MSLA.Client.MSLAService.IMSLAService {
        
        private BeginOperationDelegate onBeginTryLoginDelegate;
        
        private EndOperationDelegate onEndTryLoginDelegate;
        
        private System.Threading.SendOrPostCallback onTryLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginLogOutDelegate;
        
        private EndOperationDelegate onEndLogOutDelegate;
        
        private System.Threading.SendOrPostCallback onLogOutCompletedDelegate;
        
        private BeginOperationDelegate onBeginTryLoginMainDelegate;
        
        private EndOperationDelegate onEndTryLoginMainDelegate;
        
        private System.Threading.SendOrPostCallback onTryLoginMainCompletedDelegate;
        
        private BeginOperationDelegate onBeginTryLoginUPADelegate;
        
        private EndOperationDelegate onEndTryLoginUPADelegate;
        
        private System.Threading.SendOrPostCallback onTryLoginUPACompletedDelegate;
        
        private BeginOperationDelegate onBeginFillDtDelegate;
        
        private EndOperationDelegate onEndFillDtDelegate;
        
        private System.Threading.SendOrPostCallback onFillDtCompletedDelegate;
        
        private BeginOperationDelegate onBeginExecuteCMMDelegate;
        
        private EndOperationDelegate onEndExecuteCMMDelegate;
        
        private System.Threading.SendOrPostCallback onExecuteCMMCompletedDelegate;
        
        private BeginOperationDelegate onBeginExecuteScalarDelegate;
        
        private EndOperationDelegate onEndExecuteScalarDelegate;
        
        private System.Threading.SendOrPostCallback onExecuteScalarCompletedDelegate;
        
        private BeginOperationDelegate onBeginFetchBOMasterDelegate;
        
        private EndOperationDelegate onEndFetchBOMasterDelegate;
        
        private System.Threading.SendOrPostCallback onFetchBOMasterCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveBOMasterDelegate;
        
        private EndOperationDelegate onEndSaveBOMasterDelegate;
        
        private System.Threading.SendOrPostCallback onSaveBOMasterCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteBOMasterDelegate;
        
        private EndOperationDelegate onEndDeleteBOMasterDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteBOMasterCompletedDelegate;
        
        private BeginOperationDelegate onBeginResolveTablesFromFileDelegate;
        
        private EndOperationDelegate onEndResolveTablesFromFileDelegate;
        
        private System.Threading.SendOrPostCallback onResolveTablesFromFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginHandleExceptionDelegate;
        
        private EndOperationDelegate onEndHandleExceptionDelegate;
        
        private System.Threading.SendOrPostCallback onHandleExceptionCompletedDelegate;
        
        private BeginOperationDelegate onBeginInvokeMethodDelegate;
        
        private EndOperationDelegate onEndInvokeMethodDelegate;
        
        private System.Threading.SendOrPostCallback onInvokeMethodCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSerivceInfoDelegate;
        
        private EndOperationDelegate onEndGetSerivceInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetSerivceInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSerivceLogDelegate;
        
        private EndOperationDelegate onEndGetSerivceLogDelegate;
        
        private System.Threading.SendOrPostCallback onGetSerivceLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSerivceLogFromIDDelegate;
        
        private EndOperationDelegate onEndGetSerivceLogFromIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetSerivceLogFromIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetResultSetDelegate;
        
        private EndOperationDelegate onEndGetResultSetDelegate;
        
        private System.Threading.SendOrPostCallback onGetResultSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSelectValueDelegate;
        
        private EndOperationDelegate onEndGetSelectValueDelegate;
        
        private System.Threading.SendOrPostCallback onGetSelectValueCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSelectTextDelegate;
        
        private EndOperationDelegate onEndGetSelectTextDelegate;
        
        private System.Threading.SendOrPostCallback onGetSelectTextCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCategoryFeedDelegate;
        
        private EndOperationDelegate onEndGetCategoryFeedDelegate;
        
        private System.Threading.SendOrPostCallback onGetCategoryFeedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCategoryFeedItemsDelegate;
        
        private EndOperationDelegate onEndGetCategoryFeedItemsDelegate;
        
        private System.Threading.SendOrPostCallback onGetCategoryFeedItemsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCategoryContractDelegate;
        
        private EndOperationDelegate onEndGetCategoryContractDelegate;
        
        private System.Threading.SendOrPostCallback onGetCategoryContractCompletedDelegate;
        
        private BeginOperationDelegate onBeginContractSubscriptionServiceDelegate;
        
        private EndOperationDelegate onEndContractSubscriptionServiceDelegate;
        
        private System.Threading.SendOrPostCallback onContractSubscriptionServiceCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public MSLAServiceClient() {
        }
        
        public MSLAServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MSLAServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MSLAServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MSLAServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<TryLoginCompletedEventArgs> TryLoginCompleted;
        
        public event System.EventHandler<LogOutCompletedEventArgs> LogOutCompleted;
        
        public event System.EventHandler<TryLoginMainCompletedEventArgs> TryLoginMainCompleted;
        
        public event System.EventHandler<TryLoginUPACompletedEventArgs> TryLoginUPACompleted;
        
        public event System.EventHandler<FillDtCompletedEventArgs> FillDtCompleted;
        
        public event System.EventHandler<ExecuteCMMCompletedEventArgs> ExecuteCMMCompleted;
        
        public event System.EventHandler<ExecuteScalarCompletedEventArgs> ExecuteScalarCompleted;
        
        public event System.EventHandler<FetchBOMasterCompletedEventArgs> FetchBOMasterCompleted;
        
        public event System.EventHandler<SaveBOMasterCompletedEventArgs> SaveBOMasterCompleted;
        
        public event System.EventHandler<DeleteBOMasterCompletedEventArgs> DeleteBOMasterCompleted;
        
        public event System.EventHandler<ResolveTablesFromFileCompletedEventArgs> ResolveTablesFromFileCompleted;
        
        public event System.EventHandler<HandleExceptionCompletedEventArgs> HandleExceptionCompleted;
        
        public event System.EventHandler<InvokeMethodCompletedEventArgs> InvokeMethodCompleted;
        
        public event System.EventHandler<GetSerivceInfoCompletedEventArgs> GetSerivceInfoCompleted;
        
        public event System.EventHandler<GetSerivceLogCompletedEventArgs> GetSerivceLogCompleted;
        
        public event System.EventHandler<GetSerivceLogFromIDCompletedEventArgs> GetSerivceLogFromIDCompleted;
        
        public event System.EventHandler<GetResultSetCompletedEventArgs> GetResultSetCompleted;
        
        public event System.EventHandler<GetSelectValueCompletedEventArgs> GetSelectValueCompleted;
        
        public event System.EventHandler<GetSelectTextCompletedEventArgs> GetSelectTextCompleted;
        
        public event System.EventHandler<GetCategoryFeedCompletedEventArgs> GetCategoryFeedCompleted;
        
        public event System.EventHandler<GetCategoryFeedItemsCompletedEventArgs> GetCategoryFeedItemsCompleted;
        
        public event System.EventHandler<GetCategoryContractCompletedEventArgs> GetCategoryContractCompleted;
        
        public event System.EventHandler<ContractSubscriptionServiceCompletedEventArgs> ContractSubscriptionServiceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MSLA.Client.MSLAService.IMSLAService.BeginTryLogin(string name, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTryLogin(name, Request_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MSLA.Client.MSLAService.SimpleUserInfo MSLA.Client.MSLAService.IMSLAService.EndTryLogin(System.IAsyncResult result) {
            return base.Channel.EndTryLogin(result);
        }
        
        private System.IAsyncResult OnBeginTryLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            System.Guid Request_ID = ((System.Guid)(inValues[1]));
            return ((MSLA.Client.MSLAService.IMSLAService)(this)).BeginTryLogin(name, Request_ID, callback, asyncState);
        }
        
        private object[] OnEndTryLogin(System.IAsyncResult result) {
            MSLA.Client.MSLAService.SimpleUserInfo retVal = ((MSLA.Client.MSLAService.IMSLAService)(this)).EndTryLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTryLoginCompleted(object state) {
            if ((this.TryLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TryLoginCompleted(this, new TryLoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TryLoginAsync(string name, System.Guid Request_ID) {
            this.TryLoginAsync(name, Request_ID, null);
        }
        
        public void TryLoginAsync(string name, System.Guid Request_ID, object userState) {
            if ((this.onBeginTryLoginDelegate == null)) {
                this.onBeginTryLoginDelegate = new BeginOperationDelegate(this.OnBeginTryLogin);
            }
            if ((this.onEndTryLoginDelegate == null)) {
                this.onEndTryLoginDelegate = new EndOperationDelegate(this.OnEndTryLogin);
            }
            if ((this.onTryLoginCompletedDelegate == null)) {
                this.onTryLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTryLoginCompleted);
            }
            base.InvokeAsync(this.onBeginTryLoginDelegate, new object[] {
                        name,
                        Request_ID}, this.onEndTryLoginDelegate, this.onTryLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MSLA.Client.MSLAService.IMSLAService.BeginLogOut(MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogOut(UserInfo, Request_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool MSLA.Client.MSLAService.IMSLAService.EndLogOut(System.IAsyncResult result) {
            return base.Channel.EndLogOut(result);
        }
        
        private System.IAsyncResult OnBeginLogOut(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MSLA.Client.MSLAService.SimpleUserInfo UserInfo = ((MSLA.Client.MSLAService.SimpleUserInfo)(inValues[0]));
            System.Guid Request_ID = ((System.Guid)(inValues[1]));
            return ((MSLA.Client.MSLAService.IMSLAService)(this)).BeginLogOut(UserInfo, Request_ID, callback, asyncState);
        }
        
        private object[] OnEndLogOut(System.IAsyncResult result) {
            bool retVal = ((MSLA.Client.MSLAService.IMSLAService)(this)).EndLogOut(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLogOutCompleted(object state) {
            if ((this.LogOutCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LogOutCompleted(this, new LogOutCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LogOutAsync(MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID) {
            this.LogOutAsync(UserInfo, Request_ID, null);
        }
        
        public void LogOutAsync(MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, object userState) {
            if ((this.onBeginLogOutDelegate == null)) {
                this.onBeginLogOutDelegate = new BeginOperationDelegate(this.OnBeginLogOut);
            }
            if ((this.onEndLogOutDelegate == null)) {
                this.onEndLogOutDelegate = new EndOperationDelegate(this.OnEndLogOut);
            }
            if ((this.onLogOutCompletedDelegate == null)) {
                this.onLogOutCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogOutCompleted);
            }
            base.InvokeAsync(this.onBeginLogOutDelegate, new object[] {
                        UserInfo,
                        Request_ID}, this.onEndLogOutDelegate, this.onLogOutCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MSLA.Client.MSLAService.IMSLAService.BeginTryLoginMain(string name, string pwd, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTryLoginMain(name, pwd, Request_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MSLA.Client.MSLAService.SimpleUserInfo MSLA.Client.MSLAService.IMSLAService.EndTryLoginMain(System.IAsyncResult result) {
            return base.Channel.EndTryLoginMain(result);
        }
        
        private System.IAsyncResult OnBeginTryLoginMain(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string pwd = ((string)(inValues[1]));
            System.Guid Request_ID = ((System.Guid)(inValues[2]));
            return ((MSLA.Client.MSLAService.IMSLAService)(this)).BeginTryLoginMain(name, pwd, Request_ID, callback, asyncState);
        }
        
        private object[] OnEndTryLoginMain(System.IAsyncResult result) {
            MSLA.Client.MSLAService.SimpleUserInfo retVal = ((MSLA.Client.MSLAService.IMSLAService)(this)).EndTryLoginMain(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTryLoginMainCompleted(object state) {
            if ((this.TryLoginMainCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TryLoginMainCompleted(this, new TryLoginMainCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TryLoginMainAsync(string name, string pwd, System.Guid Request_ID) {
            this.TryLoginMainAsync(name, pwd, Request_ID, null);
        }
        
        public void TryLoginMainAsync(string name, string pwd, System.Guid Request_ID, object userState) {
            if ((this.onBeginTryLoginMainDelegate == null)) {
                this.onBeginTryLoginMainDelegate = new BeginOperationDelegate(this.OnBeginTryLoginMain);
            }
            if ((this.onEndTryLoginMainDelegate == null)) {
                this.onEndTryLoginMainDelegate = new EndOperationDelegate(this.OnEndTryLoginMain);
            }
            if ((this.onTryLoginMainCompletedDelegate == null)) {
                this.onTryLoginMainCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTryLoginMainCompleted);
            }
            base.InvokeAsync(this.onBeginTryLoginMainDelegate, new object[] {
                        name,
                        pwd,
                        Request_ID}, this.onEndTryLoginMainDelegate, this.onTryLoginMainCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MSLA.Client.MSLAService.IMSLAService.BeginTryLoginUPA(string name, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginTryLoginUPA(name, Request_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MSLA.Client.MSLAService.SimpleUserInfo MSLA.Client.MSLAService.IMSLAService.EndTryLoginUPA(System.IAsyncResult result) {
            return base.Channel.EndTryLoginUPA(result);
        }
        
        private System.IAsyncResult OnBeginTryLoginUPA(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            System.Guid Request_ID = ((System.Guid)(inValues[1]));
            return ((MSLA.Client.MSLAService.IMSLAService)(this)).BeginTryLoginUPA(name, Request_ID, callback, asyncState);
        }
        
        private object[] OnEndTryLoginUPA(System.IAsyncResult result) {
            MSLA.Client.MSLAService.SimpleUserInfo retVal = ((MSLA.Client.MSLAService.IMSLAService)(this)).EndTryLoginUPA(result);
            return new object[] {
                    retVal};
        }
        
        private void OnTryLoginUPACompleted(object state) {
            if ((this.TryLoginUPACompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.TryLoginUPACompleted(this, new TryLoginUPACompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void TryLoginUPAAsync(string name, System.Guid Request_ID) {
            this.TryLoginUPAAsync(name, Request_ID, null);
        }
        
        public void TryLoginUPAAsync(string name, System.Guid Request_ID, object userState) {
            if ((this.onBeginTryLoginUPADelegate == null)) {
                this.onBeginTryLoginUPADelegate = new BeginOperationDelegate(this.OnBeginTryLoginUPA);
            }
            if ((this.onEndTryLoginUPADelegate == null)) {
                this.onEndTryLoginUPADelegate = new EndOperationDelegate(this.OnEndTryLoginUPA);
            }
            if ((this.onTryLoginUPACompletedDelegate == null)) {
                this.onTryLoginUPACompletedDelegate = new System.Threading.SendOrPostCallback(this.OnTryLoginUPACompleted);
            }
            base.InvokeAsync(this.onBeginTryLoginUPADelegate, new object[] {
                        name,
                        Request_ID}, this.onEndTryLoginUPADelegate, this.onTryLoginUPACompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MSLA.Client.MSLAService.IMSLAService.BeginFillDt(string CmdText, MSLA.Client.MSLAService.EnDataCommandType cmdType, System.Collections.Generic.List<MSLA.Client.MSLAService.DataParameter> cmdParams, MSLA.Client.MSLAService.DBConnectionType cnType, int cmdTimeout, MSLA.Client.MSLAService.SimpleUserInfo myUser, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFillDt(CmdText, cmdType, cmdParams, cnType, cmdTimeout, myUser, Request_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MSLA.Client.MSLAService.SimpleTable MSLA.Client.MSLAService.IMSLAService.EndFillDt(System.IAsyncResult result) {
            return base.Channel.EndFillDt(result);
        }
        
        private System.IAsyncResult OnBeginFillDt(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string CmdText = ((string)(inValues[0]));
            MSLA.Client.MSLAService.EnDataCommandType cmdType = ((MSLA.Client.MSLAService.EnDataCommandType)(inValues[1]));
            System.Collections.Generic.List<MSLA.Client.MSLAService.DataParameter> cmdParams = ((System.Collections.Generic.List<MSLA.Client.MSLAService.DataParameter>)(inValues[2]));
            MSLA.Client.MSLAService.DBConnectionType cnType = ((MSLA.Client.MSLAService.DBConnectionType)(inValues[3]));
            int cmdTimeout = ((int)(inValues[4]));
            MSLA.Client.MSLAService.SimpleUserInfo myUser = ((MSLA.Client.MSLAService.SimpleUserInfo)(inValues[5]));
            System.Guid Request_ID = ((System.Guid)(inValues[6]));
            return ((MSLA.Client.MSLAService.IMSLAService)(this)).BeginFillDt(CmdText, cmdType, cmdParams, cnType, cmdTimeout, myUser, Request_ID, callback, asyncState);
        }
        
        private object[] OnEndFillDt(System.IAsyncResult result) {
            MSLA.Client.MSLAService.SimpleTable retVal = ((MSLA.Client.MSLAService.IMSLAService)(this)).EndFillDt(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFillDtCompleted(object state) {
            if ((this.FillDtCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FillDtCompleted(this, new FillDtCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FillDtAsync(string CmdText, MSLA.Client.MSLAService.EnDataCommandType cmdType, System.Collections.Generic.List<MSLA.Client.MSLAService.DataParameter> cmdParams, MSLA.Client.MSLAService.DBConnectionType cnType, int cmdTimeout, MSLA.Client.MSLAService.SimpleUserInfo myUser, System.Guid Request_ID) {
            this.FillDtAsync(CmdText, cmdType, cmdParams, cnType, cmdTimeout, myUser, Request_ID, null);
        }
        
        public void FillDtAsync(string CmdText, MSLA.Client.MSLAService.EnDataCommandType cmdType, System.Collections.Generic.List<MSLA.Client.MSLAService.DataParameter> cmdParams, MSLA.Client.MSLAService.DBConnectionType cnType, int cmdTimeout, MSLA.Client.MSLAService.SimpleUserInfo myUser, System.Guid Request_ID, object userState) {
            if ((this.onBeginFillDtDelegate == null)) {
                this.onBeginFillDtDelegate = new BeginOperationDelegate(this.OnBeginFillDt);
            }
            if ((this.onEndFillDtDelegate == null)) {
                this.onEndFillDtDelegate = new EndOperationDelegate(this.OnEndFillDt);
            }
            if ((this.onFillDtCompletedDelegate == null)) {
                this.onFillDtCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFillDtCompleted);
            }
            base.InvokeAsync(this.onBeginFillDtDelegate, new object[] {
                        CmdText,
                        cmdType,
                        cmdParams,
                        cnType,
                        cmdTimeout,
                        myUser,
                        Request_ID}, this.onEndFillDtDelegate, this.onFillDtCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MSLA.Client.MSLAService.IMSLAService.BeginExecuteCMM(string CmdText, MSLA.Client.MSLAService.EnDataCommandType cmdType, System.Collections.Generic.List<MSLA.Client.MSLAService.DataParameter> cmdParams, MSLA.Client.MSLAService.DBConnectionType cnType, int cmdTimeout, MSLA.Client.MSLAService.SimpleUserInfo myUser, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExecuteCMM(CmdText, cmdType, cmdParams, cnType, cmdTimeout, myUser, Request_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<MSLA.Client.MSLAService.DataParameter> MSLA.Client.MSLAService.IMSLAService.EndExecuteCMM(System.IAsyncResult result) {
            return base.Channel.EndExecuteCMM(result);
        }
        
        private System.IAsyncResult OnBeginExecuteCMM(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string CmdText = ((string)(inValues[0]));
            MSLA.Client.MSLAService.EnDataCommandType cmdType = ((MSLA.Client.MSLAService.EnDataCommandType)(inValues[1]));
            System.Collections.Generic.List<MSLA.Client.MSLAService.DataParameter> cmdParams = ((System.Collections.Generic.List<MSLA.Client.MSLAService.DataParameter>)(inValues[2]));
            MSLA.Client.MSLAService.DBConnectionType cnType = ((MSLA.Client.MSLAService.DBConnectionType)(inValues[3]));
            int cmdTimeout = ((int)(inValues[4]));
            MSLA.Client.MSLAService.SimpleUserInfo myUser = ((MSLA.Client.MSLAService.SimpleUserInfo)(inValues[5]));
            System.Guid Request_ID = ((System.Guid)(inValues[6]));
            return ((MSLA.Client.MSLAService.IMSLAService)(this)).BeginExecuteCMM(CmdText, cmdType, cmdParams, cnType, cmdTimeout, myUser, Request_ID, callback, asyncState);
        }
        
        private object[] OnEndExecuteCMM(System.IAsyncResult result) {
            System.Collections.Generic.List<MSLA.Client.MSLAService.DataParameter> retVal = ((MSLA.Client.MSLAService.IMSLAService)(this)).EndExecuteCMM(result);
            return new object[] {
                    retVal};
        }
        
        private void OnExecuteCMMCompleted(object state) {
            if ((this.ExecuteCMMCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExecuteCMMCompleted(this, new ExecuteCMMCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExecuteCMMAsync(string CmdText, MSLA.Client.MSLAService.EnDataCommandType cmdType, System.Collections.Generic.List<MSLA.Client.MSLAService.DataParameter> cmdParams, MSLA.Client.MSLAService.DBConnectionType cnType, int cmdTimeout, MSLA.Client.MSLAService.SimpleUserInfo myUser, System.Guid Request_ID) {
            this.ExecuteCMMAsync(CmdText, cmdType, cmdParams, cnType, cmdTimeout, myUser, Request_ID, null);
        }
        
        public void ExecuteCMMAsync(string CmdText, MSLA.Client.MSLAService.EnDataCommandType cmdType, System.Collections.Generic.List<MSLA.Client.MSLAService.DataParameter> cmdParams, MSLA.Client.MSLAService.DBConnectionType cnType, int cmdTimeout, MSLA.Client.MSLAService.SimpleUserInfo myUser, System.Guid Request_ID, object userState) {
            if ((this.onBeginExecuteCMMDelegate == null)) {
                this.onBeginExecuteCMMDelegate = new BeginOperationDelegate(this.OnBeginExecuteCMM);
            }
            if ((this.onEndExecuteCMMDelegate == null)) {
                this.onEndExecuteCMMDelegate = new EndOperationDelegate(this.OnEndExecuteCMM);
            }
            if ((this.onExecuteCMMCompletedDelegate == null)) {
                this.onExecuteCMMCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecuteCMMCompleted);
            }
            base.InvokeAsync(this.onBeginExecuteCMMDelegate, new object[] {
                        CmdText,
                        cmdType,
                        cmdParams,
                        cnType,
                        cmdTimeout,
                        myUser,
                        Request_ID}, this.onEndExecuteCMMDelegate, this.onExecuteCMMCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MSLA.Client.MSLAService.IMSLAService.BeginExecuteScalar(string CmdText, MSLA.Client.MSLAService.EnDataCommandType cmdType, System.Collections.Generic.List<MSLA.Client.MSLAService.DataParameter> cmdParams, MSLA.Client.MSLAService.DBConnectionType cnType, int cmdTimeout, MSLA.Client.MSLAService.SimpleUserInfo myUser, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExecuteScalar(CmdText, cmdType, cmdParams, cnType, cmdTimeout, myUser, Request_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        object MSLA.Client.MSLAService.IMSLAService.EndExecuteScalar(System.IAsyncResult result) {
            return base.Channel.EndExecuteScalar(result);
        }
        
        private System.IAsyncResult OnBeginExecuteScalar(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string CmdText = ((string)(inValues[0]));
            MSLA.Client.MSLAService.EnDataCommandType cmdType = ((MSLA.Client.MSLAService.EnDataCommandType)(inValues[1]));
            System.Collections.Generic.List<MSLA.Client.MSLAService.DataParameter> cmdParams = ((System.Collections.Generic.List<MSLA.Client.MSLAService.DataParameter>)(inValues[2]));
            MSLA.Client.MSLAService.DBConnectionType cnType = ((MSLA.Client.MSLAService.DBConnectionType)(inValues[3]));
            int cmdTimeout = ((int)(inValues[4]));
            MSLA.Client.MSLAService.SimpleUserInfo myUser = ((MSLA.Client.MSLAService.SimpleUserInfo)(inValues[5]));
            System.Guid Request_ID = ((System.Guid)(inValues[6]));
            return ((MSLA.Client.MSLAService.IMSLAService)(this)).BeginExecuteScalar(CmdText, cmdType, cmdParams, cnType, cmdTimeout, myUser, Request_ID, callback, asyncState);
        }
        
        private object[] OnEndExecuteScalar(System.IAsyncResult result) {
            object retVal = ((MSLA.Client.MSLAService.IMSLAService)(this)).EndExecuteScalar(result);
            return new object[] {
                    retVal};
        }
        
        private void OnExecuteScalarCompleted(object state) {
            if ((this.ExecuteScalarCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExecuteScalarCompleted(this, new ExecuteScalarCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExecuteScalarAsync(string CmdText, MSLA.Client.MSLAService.EnDataCommandType cmdType, System.Collections.Generic.List<MSLA.Client.MSLAService.DataParameter> cmdParams, MSLA.Client.MSLAService.DBConnectionType cnType, int cmdTimeout, MSLA.Client.MSLAService.SimpleUserInfo myUser, System.Guid Request_ID) {
            this.ExecuteScalarAsync(CmdText, cmdType, cmdParams, cnType, cmdTimeout, myUser, Request_ID, null);
        }
        
        public void ExecuteScalarAsync(string CmdText, MSLA.Client.MSLAService.EnDataCommandType cmdType, System.Collections.Generic.List<MSLA.Client.MSLAService.DataParameter> cmdParams, MSLA.Client.MSLAService.DBConnectionType cnType, int cmdTimeout, MSLA.Client.MSLAService.SimpleUserInfo myUser, System.Guid Request_ID, object userState) {
            if ((this.onBeginExecuteScalarDelegate == null)) {
                this.onBeginExecuteScalarDelegate = new BeginOperationDelegate(this.OnBeginExecuteScalar);
            }
            if ((this.onEndExecuteScalarDelegate == null)) {
                this.onEndExecuteScalarDelegate = new EndOperationDelegate(this.OnEndExecuteScalar);
            }
            if ((this.onExecuteScalarCompletedDelegate == null)) {
                this.onExecuteScalarCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExecuteScalarCompleted);
            }
            base.InvokeAsync(this.onBeginExecuteScalarDelegate, new object[] {
                        CmdText,
                        cmdType,
                        cmdParams,
                        cnType,
                        cmdTimeout,
                        myUser,
                        Request_ID}, this.onEndExecuteScalarDelegate, this.onExecuteScalarCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MSLA.Client.MSLAService.IMSLAService.BeginFetchBOMaster(MSLA.Client.MSLAService.MasterCriteriaBase myBOCriteria, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFetchBOMaster(myBOCriteria, Request_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MSLA.Client.MSLAService.SimpleBOMaster MSLA.Client.MSLAService.IMSLAService.EndFetchBOMaster(System.IAsyncResult result) {
            return base.Channel.EndFetchBOMaster(result);
        }
        
        private System.IAsyncResult OnBeginFetchBOMaster(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MSLA.Client.MSLAService.MasterCriteriaBase myBOCriteria = ((MSLA.Client.MSLAService.MasterCriteriaBase)(inValues[0]));
            System.Guid Request_ID = ((System.Guid)(inValues[1]));
            return ((MSLA.Client.MSLAService.IMSLAService)(this)).BeginFetchBOMaster(myBOCriteria, Request_ID, callback, asyncState);
        }
        
        private object[] OnEndFetchBOMaster(System.IAsyncResult result) {
            MSLA.Client.MSLAService.SimpleBOMaster retVal = ((MSLA.Client.MSLAService.IMSLAService)(this)).EndFetchBOMaster(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFetchBOMasterCompleted(object state) {
            if ((this.FetchBOMasterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FetchBOMasterCompleted(this, new FetchBOMasterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FetchBOMasterAsync(MSLA.Client.MSLAService.MasterCriteriaBase myBOCriteria, System.Guid Request_ID) {
            this.FetchBOMasterAsync(myBOCriteria, Request_ID, null);
        }
        
        public void FetchBOMasterAsync(MSLA.Client.MSLAService.MasterCriteriaBase myBOCriteria, System.Guid Request_ID, object userState) {
            if ((this.onBeginFetchBOMasterDelegate == null)) {
                this.onBeginFetchBOMasterDelegate = new BeginOperationDelegate(this.OnBeginFetchBOMaster);
            }
            if ((this.onEndFetchBOMasterDelegate == null)) {
                this.onEndFetchBOMasterDelegate = new EndOperationDelegate(this.OnEndFetchBOMaster);
            }
            if ((this.onFetchBOMasterCompletedDelegate == null)) {
                this.onFetchBOMasterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFetchBOMasterCompleted);
            }
            base.InvokeAsync(this.onBeginFetchBOMasterDelegate, new object[] {
                        myBOCriteria,
                        Request_ID}, this.onEndFetchBOMasterDelegate, this.onFetchBOMasterCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MSLA.Client.MSLAService.IMSLAService.BeginSaveBOMaster(MSLA.Client.MSLAService.SimpleBOMaster myBO, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveBOMaster(myBO, Request_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MSLA.Client.MSLAService.SimpleBOMaster MSLA.Client.MSLAService.IMSLAService.EndSaveBOMaster(System.IAsyncResult result) {
            return base.Channel.EndSaveBOMaster(result);
        }
        
        private System.IAsyncResult OnBeginSaveBOMaster(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MSLA.Client.MSLAService.SimpleBOMaster myBO = ((MSLA.Client.MSLAService.SimpleBOMaster)(inValues[0]));
            System.Guid Request_ID = ((System.Guid)(inValues[1]));
            return ((MSLA.Client.MSLAService.IMSLAService)(this)).BeginSaveBOMaster(myBO, Request_ID, callback, asyncState);
        }
        
        private object[] OnEndSaveBOMaster(System.IAsyncResult result) {
            MSLA.Client.MSLAService.SimpleBOMaster retVal = ((MSLA.Client.MSLAService.IMSLAService)(this)).EndSaveBOMaster(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveBOMasterCompleted(object state) {
            if ((this.SaveBOMasterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveBOMasterCompleted(this, new SaveBOMasterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveBOMasterAsync(MSLA.Client.MSLAService.SimpleBOMaster myBO, System.Guid Request_ID) {
            this.SaveBOMasterAsync(myBO, Request_ID, null);
        }
        
        public void SaveBOMasterAsync(MSLA.Client.MSLAService.SimpleBOMaster myBO, System.Guid Request_ID, object userState) {
            if ((this.onBeginSaveBOMasterDelegate == null)) {
                this.onBeginSaveBOMasterDelegate = new BeginOperationDelegate(this.OnBeginSaveBOMaster);
            }
            if ((this.onEndSaveBOMasterDelegate == null)) {
                this.onEndSaveBOMasterDelegate = new EndOperationDelegate(this.OnEndSaveBOMaster);
            }
            if ((this.onSaveBOMasterCompletedDelegate == null)) {
                this.onSaveBOMasterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveBOMasterCompleted);
            }
            base.InvokeAsync(this.onBeginSaveBOMasterDelegate, new object[] {
                        myBO,
                        Request_ID}, this.onEndSaveBOMasterDelegate, this.onSaveBOMasterCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MSLA.Client.MSLAService.IMSLAService.BeginDeleteBOMaster(MSLA.Client.MSLAService.SimpleBOMaster myBO, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteBOMaster(myBO, Request_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MSLA.Client.MSLAService.SimpleBOMaster MSLA.Client.MSLAService.IMSLAService.EndDeleteBOMaster(System.IAsyncResult result) {
            return base.Channel.EndDeleteBOMaster(result);
        }
        
        private System.IAsyncResult OnBeginDeleteBOMaster(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MSLA.Client.MSLAService.SimpleBOMaster myBO = ((MSLA.Client.MSLAService.SimpleBOMaster)(inValues[0]));
            System.Guid Request_ID = ((System.Guid)(inValues[1]));
            return ((MSLA.Client.MSLAService.IMSLAService)(this)).BeginDeleteBOMaster(myBO, Request_ID, callback, asyncState);
        }
        
        private object[] OnEndDeleteBOMaster(System.IAsyncResult result) {
            MSLA.Client.MSLAService.SimpleBOMaster retVal = ((MSLA.Client.MSLAService.IMSLAService)(this)).EndDeleteBOMaster(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteBOMasterCompleted(object state) {
            if ((this.DeleteBOMasterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteBOMasterCompleted(this, new DeleteBOMasterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteBOMasterAsync(MSLA.Client.MSLAService.SimpleBOMaster myBO, System.Guid Request_ID) {
            this.DeleteBOMasterAsync(myBO, Request_ID, null);
        }
        
        public void DeleteBOMasterAsync(MSLA.Client.MSLAService.SimpleBOMaster myBO, System.Guid Request_ID, object userState) {
            if ((this.onBeginDeleteBOMasterDelegate == null)) {
                this.onBeginDeleteBOMasterDelegate = new BeginOperationDelegate(this.OnBeginDeleteBOMaster);
            }
            if ((this.onEndDeleteBOMasterDelegate == null)) {
                this.onEndDeleteBOMasterDelegate = new EndOperationDelegate(this.OnEndDeleteBOMaster);
            }
            if ((this.onDeleteBOMasterCompletedDelegate == null)) {
                this.onDeleteBOMasterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteBOMasterCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteBOMasterDelegate, new object[] {
                        myBO,
                        Request_ID}, this.onEndDeleteBOMasterDelegate, this.onDeleteBOMasterCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MSLA.Client.MSLAService.IMSLAService.BeginResolveTablesFromFile(byte[] FileStreamInfo, string FileExtension, string FilePassword, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid REquest_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginResolveTablesFromFile(FileStreamInfo, FileExtension, FilePassword, UserInfo, REquest_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<string, MSLA.Client.MSLAService.SimpleTable> MSLA.Client.MSLAService.IMSLAService.EndResolveTablesFromFile(System.IAsyncResult result) {
            return base.Channel.EndResolveTablesFromFile(result);
        }
        
        private System.IAsyncResult OnBeginResolveTablesFromFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] FileStreamInfo = ((byte[])(inValues[0]));
            string FileExtension = ((string)(inValues[1]));
            string FilePassword = ((string)(inValues[2]));
            MSLA.Client.MSLAService.SimpleUserInfo UserInfo = ((MSLA.Client.MSLAService.SimpleUserInfo)(inValues[3]));
            System.Guid REquest_ID = ((System.Guid)(inValues[4]));
            return ((MSLA.Client.MSLAService.IMSLAService)(this)).BeginResolveTablesFromFile(FileStreamInfo, FileExtension, FilePassword, UserInfo, REquest_ID, callback, asyncState);
        }
        
        private object[] OnEndResolveTablesFromFile(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<string, MSLA.Client.MSLAService.SimpleTable> retVal = ((MSLA.Client.MSLAService.IMSLAService)(this)).EndResolveTablesFromFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnResolveTablesFromFileCompleted(object state) {
            if ((this.ResolveTablesFromFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ResolveTablesFromFileCompleted(this, new ResolveTablesFromFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ResolveTablesFromFileAsync(byte[] FileStreamInfo, string FileExtension, string FilePassword, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid REquest_ID) {
            this.ResolveTablesFromFileAsync(FileStreamInfo, FileExtension, FilePassword, UserInfo, REquest_ID, null);
        }
        
        public void ResolveTablesFromFileAsync(byte[] FileStreamInfo, string FileExtension, string FilePassword, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid REquest_ID, object userState) {
            if ((this.onBeginResolveTablesFromFileDelegate == null)) {
                this.onBeginResolveTablesFromFileDelegate = new BeginOperationDelegate(this.OnBeginResolveTablesFromFile);
            }
            if ((this.onEndResolveTablesFromFileDelegate == null)) {
                this.onEndResolveTablesFromFileDelegate = new EndOperationDelegate(this.OnEndResolveTablesFromFile);
            }
            if ((this.onResolveTablesFromFileCompletedDelegate == null)) {
                this.onResolveTablesFromFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnResolveTablesFromFileCompleted);
            }
            base.InvokeAsync(this.onBeginResolveTablesFromFileDelegate, new object[] {
                        FileStreamInfo,
                        FileExtension,
                        FilePassword,
                        UserInfo,
                        REquest_ID}, this.onEndResolveTablesFromFileDelegate, this.onResolveTablesFromFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MSLA.Client.MSLAService.IMSLAService.BeginHandleException(System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHandleException(Request_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string MSLA.Client.MSLAService.IMSLAService.EndHandleException(System.IAsyncResult result) {
            return base.Channel.EndHandleException(result);
        }
        
        private System.IAsyncResult OnBeginHandleException(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid Request_ID = ((System.Guid)(inValues[0]));
            return ((MSLA.Client.MSLAService.IMSLAService)(this)).BeginHandleException(Request_ID, callback, asyncState);
        }
        
        private object[] OnEndHandleException(System.IAsyncResult result) {
            string retVal = ((MSLA.Client.MSLAService.IMSLAService)(this)).EndHandleException(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHandleExceptionCompleted(object state) {
            if ((this.HandleExceptionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HandleExceptionCompleted(this, new HandleExceptionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HandleExceptionAsync(System.Guid Request_ID) {
            this.HandleExceptionAsync(Request_ID, null);
        }
        
        public void HandleExceptionAsync(System.Guid Request_ID, object userState) {
            if ((this.onBeginHandleExceptionDelegate == null)) {
                this.onBeginHandleExceptionDelegate = new BeginOperationDelegate(this.OnBeginHandleException);
            }
            if ((this.onEndHandleExceptionDelegate == null)) {
                this.onEndHandleExceptionDelegate = new EndOperationDelegate(this.OnEndHandleException);
            }
            if ((this.onHandleExceptionCompletedDelegate == null)) {
                this.onHandleExceptionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHandleExceptionCompleted);
            }
            base.InvokeAsync(this.onBeginHandleExceptionDelegate, new object[] {
                        Request_ID}, this.onEndHandleExceptionDelegate, this.onHandleExceptionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MSLA.Client.MSLAService.IMSLAService.BeginInvokeMethod(string assemblyName, string objectNamespace, string className, System.Collections.Generic.List<object> constructorArgs, string methodName, System.Collections.Generic.List<object> methodArgs, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInvokeMethod(assemblyName, objectNamespace, className, constructorArgs, methodName, methodArgs, UserInfo, Request_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MSLA.Client.MSLAService.SimpleTable MSLA.Client.MSLAService.IMSLAService.EndInvokeMethod(System.IAsyncResult result) {
            return base.Channel.EndInvokeMethod(result);
        }
        
        private System.IAsyncResult OnBeginInvokeMethod(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string assemblyName = ((string)(inValues[0]));
            string objectNamespace = ((string)(inValues[1]));
            string className = ((string)(inValues[2]));
            System.Collections.Generic.List<object> constructorArgs = ((System.Collections.Generic.List<object>)(inValues[3]));
            string methodName = ((string)(inValues[4]));
            System.Collections.Generic.List<object> methodArgs = ((System.Collections.Generic.List<object>)(inValues[5]));
            MSLA.Client.MSLAService.SimpleUserInfo UserInfo = ((MSLA.Client.MSLAService.SimpleUserInfo)(inValues[6]));
            System.Guid Request_ID = ((System.Guid)(inValues[7]));
            return ((MSLA.Client.MSLAService.IMSLAService)(this)).BeginInvokeMethod(assemblyName, objectNamespace, className, constructorArgs, methodName, methodArgs, UserInfo, Request_ID, callback, asyncState);
        }
        
        private object[] OnEndInvokeMethod(System.IAsyncResult result) {
            MSLA.Client.MSLAService.SimpleTable retVal = ((MSLA.Client.MSLAService.IMSLAService)(this)).EndInvokeMethod(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInvokeMethodCompleted(object state) {
            if ((this.InvokeMethodCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InvokeMethodCompleted(this, new InvokeMethodCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InvokeMethodAsync(string assemblyName, string objectNamespace, string className, System.Collections.Generic.List<object> constructorArgs, string methodName, System.Collections.Generic.List<object> methodArgs, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID) {
            this.InvokeMethodAsync(assemblyName, objectNamespace, className, constructorArgs, methodName, methodArgs, UserInfo, Request_ID, null);
        }
        
        public void InvokeMethodAsync(string assemblyName, string objectNamespace, string className, System.Collections.Generic.List<object> constructorArgs, string methodName, System.Collections.Generic.List<object> methodArgs, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, object userState) {
            if ((this.onBeginInvokeMethodDelegate == null)) {
                this.onBeginInvokeMethodDelegate = new BeginOperationDelegate(this.OnBeginInvokeMethod);
            }
            if ((this.onEndInvokeMethodDelegate == null)) {
                this.onEndInvokeMethodDelegate = new EndOperationDelegate(this.OnEndInvokeMethod);
            }
            if ((this.onInvokeMethodCompletedDelegate == null)) {
                this.onInvokeMethodCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInvokeMethodCompleted);
            }
            base.InvokeAsync(this.onBeginInvokeMethodDelegate, new object[] {
                        assemblyName,
                        objectNamespace,
                        className,
                        constructorArgs,
                        methodName,
                        methodArgs,
                        UserInfo,
                        Request_ID}, this.onEndInvokeMethodDelegate, this.onInvokeMethodCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MSLA.Client.MSLAService.IMSLAService.BeginGetSerivceInfo(MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSerivceInfo(UserInfo, Request_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MSLA.Client.MSLAService.SimpleTable MSLA.Client.MSLAService.IMSLAService.EndGetSerivceInfo(System.IAsyncResult result) {
            return base.Channel.EndGetSerivceInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetSerivceInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MSLA.Client.MSLAService.SimpleUserInfo UserInfo = ((MSLA.Client.MSLAService.SimpleUserInfo)(inValues[0]));
            System.Guid Request_ID = ((System.Guid)(inValues[1]));
            return ((MSLA.Client.MSLAService.IMSLAService)(this)).BeginGetSerivceInfo(UserInfo, Request_ID, callback, asyncState);
        }
        
        private object[] OnEndGetSerivceInfo(System.IAsyncResult result) {
            MSLA.Client.MSLAService.SimpleTable retVal = ((MSLA.Client.MSLAService.IMSLAService)(this)).EndGetSerivceInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSerivceInfoCompleted(object state) {
            if ((this.GetSerivceInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSerivceInfoCompleted(this, new GetSerivceInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSerivceInfoAsync(MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID) {
            this.GetSerivceInfoAsync(UserInfo, Request_ID, null);
        }
        
        public void GetSerivceInfoAsync(MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, object userState) {
            if ((this.onBeginGetSerivceInfoDelegate == null)) {
                this.onBeginGetSerivceInfoDelegate = new BeginOperationDelegate(this.OnBeginGetSerivceInfo);
            }
            if ((this.onEndGetSerivceInfoDelegate == null)) {
                this.onEndGetSerivceInfoDelegate = new EndOperationDelegate(this.OnEndGetSerivceInfo);
            }
            if ((this.onGetSerivceInfoCompletedDelegate == null)) {
                this.onGetSerivceInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSerivceInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetSerivceInfoDelegate, new object[] {
                        UserInfo,
                        Request_ID}, this.onEndGetSerivceInfoDelegate, this.onGetSerivceInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MSLA.Client.MSLAService.IMSLAService.BeginGetSerivceLog(MSLA.Client.MSLAService.SimpleUserInfo UserInfo, string ServiceName, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSerivceLog(UserInfo, ServiceName, Request_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string MSLA.Client.MSLAService.IMSLAService.EndGetSerivceLog(System.IAsyncResult result) {
            return base.Channel.EndGetSerivceLog(result);
        }
        
        private System.IAsyncResult OnBeginGetSerivceLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MSLA.Client.MSLAService.SimpleUserInfo UserInfo = ((MSLA.Client.MSLAService.SimpleUserInfo)(inValues[0]));
            string ServiceName = ((string)(inValues[1]));
            System.Guid Request_ID = ((System.Guid)(inValues[2]));
            return ((MSLA.Client.MSLAService.IMSLAService)(this)).BeginGetSerivceLog(UserInfo, ServiceName, Request_ID, callback, asyncState);
        }
        
        private object[] OnEndGetSerivceLog(System.IAsyncResult result) {
            string retVal = ((MSLA.Client.MSLAService.IMSLAService)(this)).EndGetSerivceLog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSerivceLogCompleted(object state) {
            if ((this.GetSerivceLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSerivceLogCompleted(this, new GetSerivceLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSerivceLogAsync(MSLA.Client.MSLAService.SimpleUserInfo UserInfo, string ServiceName, System.Guid Request_ID) {
            this.GetSerivceLogAsync(UserInfo, ServiceName, Request_ID, null);
        }
        
        public void GetSerivceLogAsync(MSLA.Client.MSLAService.SimpleUserInfo UserInfo, string ServiceName, System.Guid Request_ID, object userState) {
            if ((this.onBeginGetSerivceLogDelegate == null)) {
                this.onBeginGetSerivceLogDelegate = new BeginOperationDelegate(this.OnBeginGetSerivceLog);
            }
            if ((this.onEndGetSerivceLogDelegate == null)) {
                this.onEndGetSerivceLogDelegate = new EndOperationDelegate(this.OnEndGetSerivceLog);
            }
            if ((this.onGetSerivceLogCompletedDelegate == null)) {
                this.onGetSerivceLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSerivceLogCompleted);
            }
            base.InvokeAsync(this.onBeginGetSerivceLogDelegate, new object[] {
                        UserInfo,
                        ServiceName,
                        Request_ID}, this.onEndGetSerivceLogDelegate, this.onGetSerivceLogCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MSLA.Client.MSLAService.IMSLAService.BeginGetSerivceLogFromID(MSLA.Client.MSLAService.SimpleUserInfo UserInfo, long Service_ID, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSerivceLogFromID(UserInfo, Service_ID, Request_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string MSLA.Client.MSLAService.IMSLAService.EndGetSerivceLogFromID(System.IAsyncResult result) {
            return base.Channel.EndGetSerivceLogFromID(result);
        }
        
        private System.IAsyncResult OnBeginGetSerivceLogFromID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            MSLA.Client.MSLAService.SimpleUserInfo UserInfo = ((MSLA.Client.MSLAService.SimpleUserInfo)(inValues[0]));
            long Service_ID = ((long)(inValues[1]));
            System.Guid Request_ID = ((System.Guid)(inValues[2]));
            return ((MSLA.Client.MSLAService.IMSLAService)(this)).BeginGetSerivceLogFromID(UserInfo, Service_ID, Request_ID, callback, asyncState);
        }
        
        private object[] OnEndGetSerivceLogFromID(System.IAsyncResult result) {
            string retVal = ((MSLA.Client.MSLAService.IMSLAService)(this)).EndGetSerivceLogFromID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSerivceLogFromIDCompleted(object state) {
            if ((this.GetSerivceLogFromIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSerivceLogFromIDCompleted(this, new GetSerivceLogFromIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSerivceLogFromIDAsync(MSLA.Client.MSLAService.SimpleUserInfo UserInfo, long Service_ID, System.Guid Request_ID) {
            this.GetSerivceLogFromIDAsync(UserInfo, Service_ID, Request_ID, null);
        }
        
        public void GetSerivceLogFromIDAsync(MSLA.Client.MSLAService.SimpleUserInfo UserInfo, long Service_ID, System.Guid Request_ID, object userState) {
            if ((this.onBeginGetSerivceLogFromIDDelegate == null)) {
                this.onBeginGetSerivceLogFromIDDelegate = new BeginOperationDelegate(this.OnBeginGetSerivceLogFromID);
            }
            if ((this.onEndGetSerivceLogFromIDDelegate == null)) {
                this.onEndGetSerivceLogFromIDDelegate = new EndOperationDelegate(this.OnEndGetSerivceLogFromID);
            }
            if ((this.onGetSerivceLogFromIDCompletedDelegate == null)) {
                this.onGetSerivceLogFromIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSerivceLogFromIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetSerivceLogFromIDDelegate, new object[] {
                        UserInfo,
                        Service_ID,
                        Request_ID}, this.onEndGetSerivceLogFromIDDelegate, this.onGetSerivceLogFromIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MSLA.Client.MSLAService.IMSLAService.BeginGetResultSet(string collectionMember, string Filter, MSLA.Client.MSLAService.DBConnectionType cnType, string valueMember, string displayMember, string queryText, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetResultSet(collectionMember, Filter, cnType, valueMember, displayMember, queryText, UserInfo, Request_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<long, string> MSLA.Client.MSLAService.IMSLAService.EndGetResultSet(System.IAsyncResult result) {
            return base.Channel.EndGetResultSet(result);
        }
        
        private System.IAsyncResult OnBeginGetResultSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string collectionMember = ((string)(inValues[0]));
            string Filter = ((string)(inValues[1]));
            MSLA.Client.MSLAService.DBConnectionType cnType = ((MSLA.Client.MSLAService.DBConnectionType)(inValues[2]));
            string valueMember = ((string)(inValues[3]));
            string displayMember = ((string)(inValues[4]));
            string queryText = ((string)(inValues[5]));
            MSLA.Client.MSLAService.SimpleUserInfo UserInfo = ((MSLA.Client.MSLAService.SimpleUserInfo)(inValues[6]));
            System.Guid Request_ID = ((System.Guid)(inValues[7]));
            return ((MSLA.Client.MSLAService.IMSLAService)(this)).BeginGetResultSet(collectionMember, Filter, cnType, valueMember, displayMember, queryText, UserInfo, Request_ID, callback, asyncState);
        }
        
        private object[] OnEndGetResultSet(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<long, string> retVal = ((MSLA.Client.MSLAService.IMSLAService)(this)).EndGetResultSet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetResultSetCompleted(object state) {
            if ((this.GetResultSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetResultSetCompleted(this, new GetResultSetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetResultSetAsync(string collectionMember, string Filter, MSLA.Client.MSLAService.DBConnectionType cnType, string valueMember, string displayMember, string queryText, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID) {
            this.GetResultSetAsync(collectionMember, Filter, cnType, valueMember, displayMember, queryText, UserInfo, Request_ID, null);
        }
        
        public void GetResultSetAsync(string collectionMember, string Filter, MSLA.Client.MSLAService.DBConnectionType cnType, string valueMember, string displayMember, string queryText, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, object userState) {
            if ((this.onBeginGetResultSetDelegate == null)) {
                this.onBeginGetResultSetDelegate = new BeginOperationDelegate(this.OnBeginGetResultSet);
            }
            if ((this.onEndGetResultSetDelegate == null)) {
                this.onEndGetResultSetDelegate = new EndOperationDelegate(this.OnEndGetResultSet);
            }
            if ((this.onGetResultSetCompletedDelegate == null)) {
                this.onGetResultSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetResultSetCompleted);
            }
            base.InvokeAsync(this.onBeginGetResultSetDelegate, new object[] {
                        collectionMember,
                        Filter,
                        cnType,
                        valueMember,
                        displayMember,
                        queryText,
                        UserInfo,
                        Request_ID}, this.onEndGetResultSetDelegate, this.onGetResultSetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MSLA.Client.MSLAService.IMSLAService.BeginGetSelectValue(string collectionMember, string Filter, MSLA.Client.MSLAService.DBConnectionType cnType, string valueMember, string displayMember, string queryText, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSelectValue(collectionMember, Filter, cnType, valueMember, displayMember, queryText, UserInfo, Request_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        long MSLA.Client.MSLAService.IMSLAService.EndGetSelectValue(System.IAsyncResult result) {
            return base.Channel.EndGetSelectValue(result);
        }
        
        private System.IAsyncResult OnBeginGetSelectValue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string collectionMember = ((string)(inValues[0]));
            string Filter = ((string)(inValues[1]));
            MSLA.Client.MSLAService.DBConnectionType cnType = ((MSLA.Client.MSLAService.DBConnectionType)(inValues[2]));
            string valueMember = ((string)(inValues[3]));
            string displayMember = ((string)(inValues[4]));
            string queryText = ((string)(inValues[5]));
            MSLA.Client.MSLAService.SimpleUserInfo UserInfo = ((MSLA.Client.MSLAService.SimpleUserInfo)(inValues[6]));
            System.Guid Request_ID = ((System.Guid)(inValues[7]));
            return ((MSLA.Client.MSLAService.IMSLAService)(this)).BeginGetSelectValue(collectionMember, Filter, cnType, valueMember, displayMember, queryText, UserInfo, Request_ID, callback, asyncState);
        }
        
        private object[] OnEndGetSelectValue(System.IAsyncResult result) {
            long retVal = ((MSLA.Client.MSLAService.IMSLAService)(this)).EndGetSelectValue(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSelectValueCompleted(object state) {
            if ((this.GetSelectValueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSelectValueCompleted(this, new GetSelectValueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSelectValueAsync(string collectionMember, string Filter, MSLA.Client.MSLAService.DBConnectionType cnType, string valueMember, string displayMember, string queryText, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID) {
            this.GetSelectValueAsync(collectionMember, Filter, cnType, valueMember, displayMember, queryText, UserInfo, Request_ID, null);
        }
        
        public void GetSelectValueAsync(string collectionMember, string Filter, MSLA.Client.MSLAService.DBConnectionType cnType, string valueMember, string displayMember, string queryText, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, object userState) {
            if ((this.onBeginGetSelectValueDelegate == null)) {
                this.onBeginGetSelectValueDelegate = new BeginOperationDelegate(this.OnBeginGetSelectValue);
            }
            if ((this.onEndGetSelectValueDelegate == null)) {
                this.onEndGetSelectValueDelegate = new EndOperationDelegate(this.OnEndGetSelectValue);
            }
            if ((this.onGetSelectValueCompletedDelegate == null)) {
                this.onGetSelectValueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSelectValueCompleted);
            }
            base.InvokeAsync(this.onBeginGetSelectValueDelegate, new object[] {
                        collectionMember,
                        Filter,
                        cnType,
                        valueMember,
                        displayMember,
                        queryText,
                        UserInfo,
                        Request_ID}, this.onEndGetSelectValueDelegate, this.onGetSelectValueCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MSLA.Client.MSLAService.IMSLAService.BeginGetSelectText(string collectionMember, string Filter, MSLA.Client.MSLAService.DBConnectionType cnType, string valueMember, string displayMember, long selectedVal, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSelectText(collectionMember, Filter, cnType, valueMember, displayMember, selectedVal, UserInfo, Request_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string MSLA.Client.MSLAService.IMSLAService.EndGetSelectText(System.IAsyncResult result) {
            return base.Channel.EndGetSelectText(result);
        }
        
        private System.IAsyncResult OnBeginGetSelectText(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string collectionMember = ((string)(inValues[0]));
            string Filter = ((string)(inValues[1]));
            MSLA.Client.MSLAService.DBConnectionType cnType = ((MSLA.Client.MSLAService.DBConnectionType)(inValues[2]));
            string valueMember = ((string)(inValues[3]));
            string displayMember = ((string)(inValues[4]));
            long selectedVal = ((long)(inValues[5]));
            MSLA.Client.MSLAService.SimpleUserInfo UserInfo = ((MSLA.Client.MSLAService.SimpleUserInfo)(inValues[6]));
            System.Guid Request_ID = ((System.Guid)(inValues[7]));
            return ((MSLA.Client.MSLAService.IMSLAService)(this)).BeginGetSelectText(collectionMember, Filter, cnType, valueMember, displayMember, selectedVal, UserInfo, Request_ID, callback, asyncState);
        }
        
        private object[] OnEndGetSelectText(System.IAsyncResult result) {
            string retVal = ((MSLA.Client.MSLAService.IMSLAService)(this)).EndGetSelectText(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSelectTextCompleted(object state) {
            if ((this.GetSelectTextCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSelectTextCompleted(this, new GetSelectTextCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSelectTextAsync(string collectionMember, string Filter, MSLA.Client.MSLAService.DBConnectionType cnType, string valueMember, string displayMember, long selectedVal, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID) {
            this.GetSelectTextAsync(collectionMember, Filter, cnType, valueMember, displayMember, selectedVal, UserInfo, Request_ID, null);
        }
        
        public void GetSelectTextAsync(string collectionMember, string Filter, MSLA.Client.MSLAService.DBConnectionType cnType, string valueMember, string displayMember, long selectedVal, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, object userState) {
            if ((this.onBeginGetSelectTextDelegate == null)) {
                this.onBeginGetSelectTextDelegate = new BeginOperationDelegate(this.OnBeginGetSelectText);
            }
            if ((this.onEndGetSelectTextDelegate == null)) {
                this.onEndGetSelectTextDelegate = new EndOperationDelegate(this.OnEndGetSelectText);
            }
            if ((this.onGetSelectTextCompletedDelegate == null)) {
                this.onGetSelectTextCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSelectTextCompleted);
            }
            base.InvokeAsync(this.onBeginGetSelectTextDelegate, new object[] {
                        collectionMember,
                        Filter,
                        cnType,
                        valueMember,
                        displayMember,
                        selectedVal,
                        UserInfo,
                        Request_ID}, this.onEndGetSelectTextDelegate, this.onGetSelectTextCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MSLA.Client.MSLAService.IMSLAService.BeginGetCategoryFeed(long Category_ID, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCategoryFeed(Category_ID, UserInfo, Request_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string MSLA.Client.MSLAService.IMSLAService.EndGetCategoryFeed(System.IAsyncResult result) {
            return base.Channel.EndGetCategoryFeed(result);
        }
        
        private System.IAsyncResult OnBeginGetCategoryFeed(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long Category_ID = ((long)(inValues[0]));
            MSLA.Client.MSLAService.SimpleUserInfo UserInfo = ((MSLA.Client.MSLAService.SimpleUserInfo)(inValues[1]));
            System.Guid Request_ID = ((System.Guid)(inValues[2]));
            return ((MSLA.Client.MSLAService.IMSLAService)(this)).BeginGetCategoryFeed(Category_ID, UserInfo, Request_ID, callback, asyncState);
        }
        
        private object[] OnEndGetCategoryFeed(System.IAsyncResult result) {
            string retVal = ((MSLA.Client.MSLAService.IMSLAService)(this)).EndGetCategoryFeed(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCategoryFeedCompleted(object state) {
            if ((this.GetCategoryFeedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCategoryFeedCompleted(this, new GetCategoryFeedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCategoryFeedAsync(long Category_ID, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID) {
            this.GetCategoryFeedAsync(Category_ID, UserInfo, Request_ID, null);
        }
        
        public void GetCategoryFeedAsync(long Category_ID, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, object userState) {
            if ((this.onBeginGetCategoryFeedDelegate == null)) {
                this.onBeginGetCategoryFeedDelegate = new BeginOperationDelegate(this.OnBeginGetCategoryFeed);
            }
            if ((this.onEndGetCategoryFeedDelegate == null)) {
                this.onEndGetCategoryFeedDelegate = new EndOperationDelegate(this.OnEndGetCategoryFeed);
            }
            if ((this.onGetCategoryFeedCompletedDelegate == null)) {
                this.onGetCategoryFeedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCategoryFeedCompleted);
            }
            base.InvokeAsync(this.onBeginGetCategoryFeedDelegate, new object[] {
                        Category_ID,
                        UserInfo,
                        Request_ID}, this.onEndGetCategoryFeedDelegate, this.onGetCategoryFeedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MSLA.Client.MSLAService.IMSLAService.BeginGetCategoryFeedItems(long Category_ID, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCategoryFeedItems(Category_ID, UserInfo, Request_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<MSLA.Client.MSLAService.FeedItem> MSLA.Client.MSLAService.IMSLAService.EndGetCategoryFeedItems(System.IAsyncResult result) {
            return base.Channel.EndGetCategoryFeedItems(result);
        }
        
        private System.IAsyncResult OnBeginGetCategoryFeedItems(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long Category_ID = ((long)(inValues[0]));
            MSLA.Client.MSLAService.SimpleUserInfo UserInfo = ((MSLA.Client.MSLAService.SimpleUserInfo)(inValues[1]));
            System.Guid Request_ID = ((System.Guid)(inValues[2]));
            return ((MSLA.Client.MSLAService.IMSLAService)(this)).BeginGetCategoryFeedItems(Category_ID, UserInfo, Request_ID, callback, asyncState);
        }
        
        private object[] OnEndGetCategoryFeedItems(System.IAsyncResult result) {
            System.Collections.Generic.List<MSLA.Client.MSLAService.FeedItem> retVal = ((MSLA.Client.MSLAService.IMSLAService)(this)).EndGetCategoryFeedItems(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCategoryFeedItemsCompleted(object state) {
            if ((this.GetCategoryFeedItemsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCategoryFeedItemsCompleted(this, new GetCategoryFeedItemsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCategoryFeedItemsAsync(long Category_ID, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID) {
            this.GetCategoryFeedItemsAsync(Category_ID, UserInfo, Request_ID, null);
        }
        
        public void GetCategoryFeedItemsAsync(long Category_ID, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, object userState) {
            if ((this.onBeginGetCategoryFeedItemsDelegate == null)) {
                this.onBeginGetCategoryFeedItemsDelegate = new BeginOperationDelegate(this.OnBeginGetCategoryFeedItems);
            }
            if ((this.onEndGetCategoryFeedItemsDelegate == null)) {
                this.onEndGetCategoryFeedItemsDelegate = new EndOperationDelegate(this.OnEndGetCategoryFeedItems);
            }
            if ((this.onGetCategoryFeedItemsCompletedDelegate == null)) {
                this.onGetCategoryFeedItemsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCategoryFeedItemsCompleted);
            }
            base.InvokeAsync(this.onBeginGetCategoryFeedItemsDelegate, new object[] {
                        Category_ID,
                        UserInfo,
                        Request_ID}, this.onEndGetCategoryFeedItemsDelegate, this.onGetCategoryFeedItemsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MSLA.Client.MSLAService.IMSLAService.BeginGetCategoryContract(long Category_ID, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCategoryContract(Category_ID, UserInfo, Request_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MSLA.Client.MSLAService.SimpleTable MSLA.Client.MSLAService.IMSLAService.EndGetCategoryContract(System.IAsyncResult result) {
            return base.Channel.EndGetCategoryContract(result);
        }
        
        private System.IAsyncResult OnBeginGetCategoryContract(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long Category_ID = ((long)(inValues[0]));
            MSLA.Client.MSLAService.SimpleUserInfo UserInfo = ((MSLA.Client.MSLAService.SimpleUserInfo)(inValues[1]));
            System.Guid Request_ID = ((System.Guid)(inValues[2]));
            return ((MSLA.Client.MSLAService.IMSLAService)(this)).BeginGetCategoryContract(Category_ID, UserInfo, Request_ID, callback, asyncState);
        }
        
        private object[] OnEndGetCategoryContract(System.IAsyncResult result) {
            MSLA.Client.MSLAService.SimpleTable retVal = ((MSLA.Client.MSLAService.IMSLAService)(this)).EndGetCategoryContract(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCategoryContractCompleted(object state) {
            if ((this.GetCategoryContractCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCategoryContractCompleted(this, new GetCategoryContractCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCategoryContractAsync(long Category_ID, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID) {
            this.GetCategoryContractAsync(Category_ID, UserInfo, Request_ID, null);
        }
        
        public void GetCategoryContractAsync(long Category_ID, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, object userState) {
            if ((this.onBeginGetCategoryContractDelegate == null)) {
                this.onBeginGetCategoryContractDelegate = new BeginOperationDelegate(this.OnBeginGetCategoryContract);
            }
            if ((this.onEndGetCategoryContractDelegate == null)) {
                this.onEndGetCategoryContractDelegate = new EndOperationDelegate(this.OnEndGetCategoryContract);
            }
            if ((this.onGetCategoryContractCompletedDelegate == null)) {
                this.onGetCategoryContractCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCategoryContractCompleted);
            }
            base.InvokeAsync(this.onBeginGetCategoryContractDelegate, new object[] {
                        Category_ID,
                        UserInfo,
                        Request_ID}, this.onEndGetCategoryContractDelegate, this.onGetCategoryContractCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MSLA.Client.MSLAService.IMSLAService.BeginContractSubscriptionService(long Category_ID, string message, bool IsHTML, string Subject, byte[] FileStreamInfo, string FileName, MSLA.Client.MSLAService.SimpleTable testValue, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginContractSubscriptionService(Category_ID, message, IsHTML, Subject, FileStreamInfo, FileName, testValue, UserInfo, Request_ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool MSLA.Client.MSLAService.IMSLAService.EndContractSubscriptionService(System.IAsyncResult result) {
            return base.Channel.EndContractSubscriptionService(result);
        }
        
        private System.IAsyncResult OnBeginContractSubscriptionService(object[] inValues, System.AsyncCallback callback, object asyncState) {
            long Category_ID = ((long)(inValues[0]));
            string message = ((string)(inValues[1]));
            bool IsHTML = ((bool)(inValues[2]));
            string Subject = ((string)(inValues[3]));
            byte[] FileStreamInfo = ((byte[])(inValues[4]));
            string FileName = ((string)(inValues[5]));
            MSLA.Client.MSLAService.SimpleTable testValue = ((MSLA.Client.MSLAService.SimpleTable)(inValues[6]));
            MSLA.Client.MSLAService.SimpleUserInfo UserInfo = ((MSLA.Client.MSLAService.SimpleUserInfo)(inValues[7]));
            System.Guid Request_ID = ((System.Guid)(inValues[8]));
            return ((MSLA.Client.MSLAService.IMSLAService)(this)).BeginContractSubscriptionService(Category_ID, message, IsHTML, Subject, FileStreamInfo, FileName, testValue, UserInfo, Request_ID, callback, asyncState);
        }
        
        private object[] OnEndContractSubscriptionService(System.IAsyncResult result) {
            bool retVal = ((MSLA.Client.MSLAService.IMSLAService)(this)).EndContractSubscriptionService(result);
            return new object[] {
                    retVal};
        }
        
        private void OnContractSubscriptionServiceCompleted(object state) {
            if ((this.ContractSubscriptionServiceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ContractSubscriptionServiceCompleted(this, new ContractSubscriptionServiceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ContractSubscriptionServiceAsync(long Category_ID, string message, bool IsHTML, string Subject, byte[] FileStreamInfo, string FileName, MSLA.Client.MSLAService.SimpleTable testValue, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID) {
            this.ContractSubscriptionServiceAsync(Category_ID, message, IsHTML, Subject, FileStreamInfo, FileName, testValue, UserInfo, Request_ID, null);
        }
        
        public void ContractSubscriptionServiceAsync(long Category_ID, string message, bool IsHTML, string Subject, byte[] FileStreamInfo, string FileName, MSLA.Client.MSLAService.SimpleTable testValue, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, object userState) {
            if ((this.onBeginContractSubscriptionServiceDelegate == null)) {
                this.onBeginContractSubscriptionServiceDelegate = new BeginOperationDelegate(this.OnBeginContractSubscriptionService);
            }
            if ((this.onEndContractSubscriptionServiceDelegate == null)) {
                this.onEndContractSubscriptionServiceDelegate = new EndOperationDelegate(this.OnEndContractSubscriptionService);
            }
            if ((this.onContractSubscriptionServiceCompletedDelegate == null)) {
                this.onContractSubscriptionServiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnContractSubscriptionServiceCompleted);
            }
            base.InvokeAsync(this.onBeginContractSubscriptionServiceDelegate, new object[] {
                        Category_ID,
                        message,
                        IsHTML,
                        Subject,
                        FileStreamInfo,
                        FileName,
                        testValue,
                        UserInfo,
                        Request_ID}, this.onEndContractSubscriptionServiceDelegate, this.onContractSubscriptionServiceCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override MSLA.Client.MSLAService.IMSLAService CreateChannel() {
            return new MSLAServiceClientChannel(this);
        }
        
        private class MSLAServiceClientChannel : ChannelBase<MSLA.Client.MSLAService.IMSLAService>, MSLA.Client.MSLAService.IMSLAService {
            
            public MSLAServiceClientChannel(System.ServiceModel.ClientBase<MSLA.Client.MSLAService.IMSLAService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginTryLogin(string name, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = name;
                _args[1] = Request_ID;
                System.IAsyncResult _result = base.BeginInvoke("TryLogin", _args, callback, asyncState);
                return _result;
            }
            
            public MSLA.Client.MSLAService.SimpleUserInfo EndTryLogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                MSLA.Client.MSLAService.SimpleUserInfo _result = ((MSLA.Client.MSLAService.SimpleUserInfo)(base.EndInvoke("TryLogin", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLogOut(MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = UserInfo;
                _args[1] = Request_ID;
                System.IAsyncResult _result = base.BeginInvoke("LogOut", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndLogOut(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("LogOut", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginTryLoginMain(string name, string pwd, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = name;
                _args[1] = pwd;
                _args[2] = Request_ID;
                System.IAsyncResult _result = base.BeginInvoke("TryLoginMain", _args, callback, asyncState);
                return _result;
            }
            
            public MSLA.Client.MSLAService.SimpleUserInfo EndTryLoginMain(System.IAsyncResult result) {
                object[] _args = new object[0];
                MSLA.Client.MSLAService.SimpleUserInfo _result = ((MSLA.Client.MSLAService.SimpleUserInfo)(base.EndInvoke("TryLoginMain", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginTryLoginUPA(string name, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = name;
                _args[1] = Request_ID;
                System.IAsyncResult _result = base.BeginInvoke("TryLoginUPA", _args, callback, asyncState);
                return _result;
            }
            
            public MSLA.Client.MSLAService.SimpleUserInfo EndTryLoginUPA(System.IAsyncResult result) {
                object[] _args = new object[0];
                MSLA.Client.MSLAService.SimpleUserInfo _result = ((MSLA.Client.MSLAService.SimpleUserInfo)(base.EndInvoke("TryLoginUPA", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFillDt(string CmdText, MSLA.Client.MSLAService.EnDataCommandType cmdType, System.Collections.Generic.List<MSLA.Client.MSLAService.DataParameter> cmdParams, MSLA.Client.MSLAService.DBConnectionType cnType, int cmdTimeout, MSLA.Client.MSLAService.SimpleUserInfo myUser, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = CmdText;
                _args[1] = cmdType;
                _args[2] = cmdParams;
                _args[3] = cnType;
                _args[4] = cmdTimeout;
                _args[5] = myUser;
                _args[6] = Request_ID;
                System.IAsyncResult _result = base.BeginInvoke("FillDt", _args, callback, asyncState);
                return _result;
            }
            
            public MSLA.Client.MSLAService.SimpleTable EndFillDt(System.IAsyncResult result) {
                object[] _args = new object[0];
                MSLA.Client.MSLAService.SimpleTable _result = ((MSLA.Client.MSLAService.SimpleTable)(base.EndInvoke("FillDt", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginExecuteCMM(string CmdText, MSLA.Client.MSLAService.EnDataCommandType cmdType, System.Collections.Generic.List<MSLA.Client.MSLAService.DataParameter> cmdParams, MSLA.Client.MSLAService.DBConnectionType cnType, int cmdTimeout, MSLA.Client.MSLAService.SimpleUserInfo myUser, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = CmdText;
                _args[1] = cmdType;
                _args[2] = cmdParams;
                _args[3] = cnType;
                _args[4] = cmdTimeout;
                _args[5] = myUser;
                _args[6] = Request_ID;
                System.IAsyncResult _result = base.BeginInvoke("ExecuteCMM", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<MSLA.Client.MSLAService.DataParameter> EndExecuteCMM(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<MSLA.Client.MSLAService.DataParameter> _result = ((System.Collections.Generic.List<MSLA.Client.MSLAService.DataParameter>)(base.EndInvoke("ExecuteCMM", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginExecuteScalar(string CmdText, MSLA.Client.MSLAService.EnDataCommandType cmdType, System.Collections.Generic.List<MSLA.Client.MSLAService.DataParameter> cmdParams, MSLA.Client.MSLAService.DBConnectionType cnType, int cmdTimeout, MSLA.Client.MSLAService.SimpleUserInfo myUser, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = CmdText;
                _args[1] = cmdType;
                _args[2] = cmdParams;
                _args[3] = cnType;
                _args[4] = cmdTimeout;
                _args[5] = myUser;
                _args[6] = Request_ID;
                System.IAsyncResult _result = base.BeginInvoke("ExecuteScalar", _args, callback, asyncState);
                return _result;
            }
            
            public object EndExecuteScalar(System.IAsyncResult result) {
                object[] _args = new object[0];
                object _result = ((object)(base.EndInvoke("ExecuteScalar", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFetchBOMaster(MSLA.Client.MSLAService.MasterCriteriaBase myBOCriteria, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = myBOCriteria;
                _args[1] = Request_ID;
                System.IAsyncResult _result = base.BeginInvoke("FetchBOMaster", _args, callback, asyncState);
                return _result;
            }
            
            public MSLA.Client.MSLAService.SimpleBOMaster EndFetchBOMaster(System.IAsyncResult result) {
                object[] _args = new object[0];
                MSLA.Client.MSLAService.SimpleBOMaster _result = ((MSLA.Client.MSLAService.SimpleBOMaster)(base.EndInvoke("FetchBOMaster", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveBOMaster(MSLA.Client.MSLAService.SimpleBOMaster myBO, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = myBO;
                _args[1] = Request_ID;
                System.IAsyncResult _result = base.BeginInvoke("SaveBOMaster", _args, callback, asyncState);
                return _result;
            }
            
            public MSLA.Client.MSLAService.SimpleBOMaster EndSaveBOMaster(System.IAsyncResult result) {
                object[] _args = new object[0];
                MSLA.Client.MSLAService.SimpleBOMaster _result = ((MSLA.Client.MSLAService.SimpleBOMaster)(base.EndInvoke("SaveBOMaster", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteBOMaster(MSLA.Client.MSLAService.SimpleBOMaster myBO, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = myBO;
                _args[1] = Request_ID;
                System.IAsyncResult _result = base.BeginInvoke("DeleteBOMaster", _args, callback, asyncState);
                return _result;
            }
            
            public MSLA.Client.MSLAService.SimpleBOMaster EndDeleteBOMaster(System.IAsyncResult result) {
                object[] _args = new object[0];
                MSLA.Client.MSLAService.SimpleBOMaster _result = ((MSLA.Client.MSLAService.SimpleBOMaster)(base.EndInvoke("DeleteBOMaster", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginResolveTablesFromFile(byte[] FileStreamInfo, string FileExtension, string FilePassword, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid REquest_ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = FileStreamInfo;
                _args[1] = FileExtension;
                _args[2] = FilePassword;
                _args[3] = UserInfo;
                _args[4] = REquest_ID;
                System.IAsyncResult _result = base.BeginInvoke("ResolveTablesFromFile", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<string, MSLA.Client.MSLAService.SimpleTable> EndResolveTablesFromFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<string, MSLA.Client.MSLAService.SimpleTable> _result = ((System.Collections.Generic.Dictionary<string, MSLA.Client.MSLAService.SimpleTable>)(base.EndInvoke("ResolveTablesFromFile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginHandleException(System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Request_ID;
                System.IAsyncResult _result = base.BeginInvoke("HandleException", _args, callback, asyncState);
                return _result;
            }
            
            public string EndHandleException(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("HandleException", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInvokeMethod(string assemblyName, string objectNamespace, string className, System.Collections.Generic.List<object> constructorArgs, string methodName, System.Collections.Generic.List<object> methodArgs, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[8];
                _args[0] = assemblyName;
                _args[1] = objectNamespace;
                _args[2] = className;
                _args[3] = constructorArgs;
                _args[4] = methodName;
                _args[5] = methodArgs;
                _args[6] = UserInfo;
                _args[7] = Request_ID;
                System.IAsyncResult _result = base.BeginInvoke("InvokeMethod", _args, callback, asyncState);
                return _result;
            }
            
            public MSLA.Client.MSLAService.SimpleTable EndInvokeMethod(System.IAsyncResult result) {
                object[] _args = new object[0];
                MSLA.Client.MSLAService.SimpleTable _result = ((MSLA.Client.MSLAService.SimpleTable)(base.EndInvoke("InvokeMethod", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSerivceInfo(MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = UserInfo;
                _args[1] = Request_ID;
                System.IAsyncResult _result = base.BeginInvoke("GetSerivceInfo", _args, callback, asyncState);
                return _result;
            }
            
            public MSLA.Client.MSLAService.SimpleTable EndGetSerivceInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                MSLA.Client.MSLAService.SimpleTable _result = ((MSLA.Client.MSLAService.SimpleTable)(base.EndInvoke("GetSerivceInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSerivceLog(MSLA.Client.MSLAService.SimpleUserInfo UserInfo, string ServiceName, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = UserInfo;
                _args[1] = ServiceName;
                _args[2] = Request_ID;
                System.IAsyncResult _result = base.BeginInvoke("GetSerivceLog", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetSerivceLog(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetSerivceLog", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSerivceLogFromID(MSLA.Client.MSLAService.SimpleUserInfo UserInfo, long Service_ID, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = UserInfo;
                _args[1] = Service_ID;
                _args[2] = Request_ID;
                System.IAsyncResult _result = base.BeginInvoke("GetSerivceLogFromID", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetSerivceLogFromID(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetSerivceLogFromID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetResultSet(string collectionMember, string Filter, MSLA.Client.MSLAService.DBConnectionType cnType, string valueMember, string displayMember, string queryText, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[8];
                _args[0] = collectionMember;
                _args[1] = Filter;
                _args[2] = cnType;
                _args[3] = valueMember;
                _args[4] = displayMember;
                _args[5] = queryText;
                _args[6] = UserInfo;
                _args[7] = Request_ID;
                System.IAsyncResult _result = base.BeginInvoke("GetResultSet", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<long, string> EndGetResultSet(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<long, string> _result = ((System.Collections.Generic.Dictionary<long, string>)(base.EndInvoke("GetResultSet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSelectValue(string collectionMember, string Filter, MSLA.Client.MSLAService.DBConnectionType cnType, string valueMember, string displayMember, string queryText, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[8];
                _args[0] = collectionMember;
                _args[1] = Filter;
                _args[2] = cnType;
                _args[3] = valueMember;
                _args[4] = displayMember;
                _args[5] = queryText;
                _args[6] = UserInfo;
                _args[7] = Request_ID;
                System.IAsyncResult _result = base.BeginInvoke("GetSelectValue", _args, callback, asyncState);
                return _result;
            }
            
            public long EndGetSelectValue(System.IAsyncResult result) {
                object[] _args = new object[0];
                long _result = ((long)(base.EndInvoke("GetSelectValue", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSelectText(string collectionMember, string Filter, MSLA.Client.MSLAService.DBConnectionType cnType, string valueMember, string displayMember, long selectedVal, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[8];
                _args[0] = collectionMember;
                _args[1] = Filter;
                _args[2] = cnType;
                _args[3] = valueMember;
                _args[4] = displayMember;
                _args[5] = selectedVal;
                _args[6] = UserInfo;
                _args[7] = Request_ID;
                System.IAsyncResult _result = base.BeginInvoke("GetSelectText", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetSelectText(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetSelectText", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCategoryFeed(long Category_ID, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = Category_ID;
                _args[1] = UserInfo;
                _args[2] = Request_ID;
                System.IAsyncResult _result = base.BeginInvoke("GetCategoryFeed", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetCategoryFeed(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetCategoryFeed", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCategoryFeedItems(long Category_ID, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = Category_ID;
                _args[1] = UserInfo;
                _args[2] = Request_ID;
                System.IAsyncResult _result = base.BeginInvoke("GetCategoryFeedItems", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<MSLA.Client.MSLAService.FeedItem> EndGetCategoryFeedItems(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<MSLA.Client.MSLAService.FeedItem> _result = ((System.Collections.Generic.List<MSLA.Client.MSLAService.FeedItem>)(base.EndInvoke("GetCategoryFeedItems", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCategoryContract(long Category_ID, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = Category_ID;
                _args[1] = UserInfo;
                _args[2] = Request_ID;
                System.IAsyncResult _result = base.BeginInvoke("GetCategoryContract", _args, callback, asyncState);
                return _result;
            }
            
            public MSLA.Client.MSLAService.SimpleTable EndGetCategoryContract(System.IAsyncResult result) {
                object[] _args = new object[0];
                MSLA.Client.MSLAService.SimpleTable _result = ((MSLA.Client.MSLAService.SimpleTable)(base.EndInvoke("GetCategoryContract", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginContractSubscriptionService(long Category_ID, string message, bool IsHTML, string Subject, byte[] FileStreamInfo, string FileName, MSLA.Client.MSLAService.SimpleTable testValue, MSLA.Client.MSLAService.SimpleUserInfo UserInfo, System.Guid Request_ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[9];
                _args[0] = Category_ID;
                _args[1] = message;
                _args[2] = IsHTML;
                _args[3] = Subject;
                _args[4] = FileStreamInfo;
                _args[5] = FileName;
                _args[6] = testValue;
                _args[7] = UserInfo;
                _args[8] = Request_ID;
                System.IAsyncResult _result = base.BeginInvoke("ContractSubscriptionService", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndContractSubscriptionService(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ContractSubscriptionService", _args, result)));
                return _result;
            }
        }
    }
}
